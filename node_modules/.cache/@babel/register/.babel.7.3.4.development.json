{
  "{\"sourceRoot\":\"/home/xtro/fire\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/xtro/fire\",\"filename\":\"/home/xtro/fire/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/xtro/fire\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/xtro/fire",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/xtro/fire",
      "filename": "/home/xtro/fire/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/xtro/fire",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/xtro/fire/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/xtro/fire/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/xtro/fire",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar express = require(\"express\");\n\nvar mongoose = require(\"mongoose\");\n\nvar user = require(\"./routes/user.route\");\n\nvar blog = require(\"./routes/blog.route\");\n\nvar bodyParser = require(\"body-parser\");\n\nvar PORT = process.env.PORT || \"4000\";\nvar db = \"mongodb://localhost/fire\";\nvar app = express();\nmongoose.connect(db).then(function () {\n  return console.log(\"MongoDB connected\");\n}).catch(function (err) {\n  return console.log(err);\n});\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({\n  extended: false\n}));\napp.use(\"/user\", user);\napp.use(\"/blog\", blog);\napp.listen(PORT, function () {\n  return console.log(\"Server running on port \".concat(PORT));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwibW9uZ29vc2UiLCJ1c2VyIiwiYmxvZyIsImJvZHlQYXJzZXIiLCJQT1JUIiwicHJvY2VzcyIsImVudiIsImRiIiwiYXBwIiwiY29ubmVjdCIsInRoZW4iLCJjb25zb2xlIiwibG9nIiwiY2F0Y2giLCJlcnIiLCJ1c2UiLCJqc29uIiwidXJsZW5jb2RlZCIsImV4dGVuZGVkIiwibGlzdGVuIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O0FBQ0EsSUFBTUMsUUFBUSxHQUFHRCxPQUFPLENBQUMsVUFBRCxDQUF4Qjs7QUFDQSxJQUFNRSxJQUFJLEdBQUdGLE9BQU8sQ0FBQyxxQkFBRCxDQUFwQjs7QUFDQSxJQUFNRyxJQUFJLEdBQUdILE9BQU8sQ0FBQyxxQkFBRCxDQUFwQjs7QUFDQSxJQUFNSSxVQUFVLEdBQUdKLE9BQU8sQ0FBQyxhQUFELENBQTFCOztBQUNBLElBQU1LLElBQUksR0FBR0MsT0FBTyxDQUFDQyxHQUFSLENBQVlGLElBQVosSUFBb0IsTUFBakM7QUFDQSxJQUFNRyxFQUFFLEdBQUcsMEJBQVg7QUFDQSxJQUFNQyxHQUFHLEdBQUdWLE9BQU8sRUFBbkI7QUFFQUUsUUFBUSxDQUNMUyxPQURILENBQ1dGLEVBRFgsRUFFR0csSUFGSCxDQUVRO0FBQUEsU0FBTUMsT0FBTyxDQUFDQyxHQUFSLENBQVksbUJBQVosQ0FBTjtBQUFBLENBRlIsRUFHR0MsS0FISCxDQUdTLFVBQUFDLEdBQUc7QUFBQSxTQUFJSCxPQUFPLENBQUNDLEdBQVIsQ0FBWUUsR0FBWixDQUFKO0FBQUEsQ0FIWjtBQUtBTixHQUFHLENBQUNPLEdBQUosQ0FBUVosVUFBVSxDQUFDYSxJQUFYLEVBQVI7QUFDQVIsR0FBRyxDQUFDTyxHQUFKLENBQVFaLFVBQVUsQ0FBQ2MsVUFBWCxDQUFzQjtBQUFFQyxFQUFBQSxRQUFRLEVBQUU7QUFBWixDQUF0QixDQUFSO0FBQ0FWLEdBQUcsQ0FBQ08sR0FBSixDQUFRLE9BQVIsRUFBaUJkLElBQWpCO0FBQ0FPLEdBQUcsQ0FBQ08sR0FBSixDQUFRLE9BQVIsRUFBaUJiLElBQWpCO0FBRUFNLEdBQUcsQ0FBQ1csTUFBSixDQUFXZixJQUFYLEVBQWlCO0FBQUEsU0FBTU8sT0FBTyxDQUFDQyxHQUFSLGtDQUFzQ1IsSUFBdEMsRUFBTjtBQUFBLENBQWpCIiwic291cmNlUm9vdCI6Ii9ob21lL3h0cm8vZmlyZSIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKFwiZXhwcmVzc1wiKTtcbmNvbnN0IG1vbmdvb3NlID0gcmVxdWlyZShcIm1vbmdvb3NlXCIpO1xuY29uc3QgdXNlciA9IHJlcXVpcmUoXCIuL3JvdXRlcy91c2VyLnJvdXRlXCIpO1xuY29uc3QgYmxvZyA9IHJlcXVpcmUoXCIuL3JvdXRlcy9ibG9nLnJvdXRlXCIpO1xuY29uc3QgYm9keVBhcnNlciA9IHJlcXVpcmUoXCJib2R5LXBhcnNlclwiKTtcbmNvbnN0IFBPUlQgPSBwcm9jZXNzLmVudi5QT1JUIHx8IFwiNDAwMFwiO1xuY29uc3QgZGIgPSBcIm1vbmdvZGI6Ly9sb2NhbGhvc3QvZmlyZVwiO1xuY29uc3QgYXBwID0gZXhwcmVzcygpO1xuXG5tb25nb29zZVxuICAuY29ubmVjdChkYilcbiAgLnRoZW4oKCkgPT4gY29uc29sZS5sb2coXCJNb25nb0RCIGNvbm5lY3RlZFwiKSlcbiAgLmNhdGNoKGVyciA9PiBjb25zb2xlLmxvZyhlcnIpKTtcblxuYXBwLnVzZShib2R5UGFyc2VyLmpzb24oKSk7XG5hcHAudXNlKGJvZHlQYXJzZXIudXJsZW5jb2RlZCh7IGV4dGVuZGVkOiBmYWxzZSB9KSk7XG5hcHAudXNlKFwiL3VzZXJcIiwgdXNlcik7XG5hcHAudXNlKFwiL2Jsb2dcIiwgYmxvZyk7XG5cbmFwcC5saXN0ZW4oUE9SVCwgKCkgPT4gY29uc29sZS5sb2coYFNlcnZlciBydW5uaW5nIG9uIHBvcnQgJHtQT1JUfWApKTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "express",
        "require",
        "mongoose",
        "user",
        "blog",
        "bodyParser",
        "PORT",
        "process",
        "env",
        "db",
        "app",
        "connect",
        "then",
        "console",
        "log",
        "catch",
        "err",
        "use",
        "json",
        "urlencoded",
        "extended",
        "listen"
      ],
      "mappings": ";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,QAAQ,GAAGD,OAAO,CAAC,UAAD,CAAxB;;AACA,IAAME,IAAI,GAAGF,OAAO,CAAC,qBAAD,CAApB;;AACA,IAAMG,IAAI,GAAGH,OAAO,CAAC,qBAAD,CAApB;;AACA,IAAMI,UAAU,GAAGJ,OAAO,CAAC,aAAD,CAA1B;;AACA,IAAMK,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYF,IAAZ,IAAoB,MAAjC;AACA,IAAMG,EAAE,GAAG,0BAAX;AACA,IAAMC,GAAG,GAAGV,OAAO,EAAnB;AAEAE,QAAQ,CACLS,OADH,CACWF,EADX,EAEGG,IAFH,CAEQ;AAAA,SAAMC,OAAO,CAACC,GAAR,CAAY,mBAAZ,CAAN;AAAA,CAFR,EAGGC,KAHH,CAGS,UAAAC,GAAG;AAAA,SAAIH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAAJ;AAAA,CAHZ;AAKAN,GAAG,CAACO,GAAJ,CAAQZ,UAAU,CAACa,IAAX,EAAR;AACAR,GAAG,CAACO,GAAJ,CAAQZ,UAAU,CAACc,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR;AACAV,GAAG,CAACO,GAAJ,CAAQ,OAAR,EAAiBd,IAAjB;AACAO,GAAG,CAACO,GAAJ,CAAQ,OAAR,EAAiBb,IAAjB;AAEAM,GAAG,CAACW,MAAJ,CAAWf,IAAX,EAAiB;AAAA,SAAMO,OAAO,CAACC,GAAR,kCAAsCR,IAAtC,EAAN;AAAA,CAAjB",
      "sourceRoot": "/home/xtro/fire",
      "sourcesContent": [
        "const express = require(\"express\");\nconst mongoose = require(\"mongoose\");\nconst user = require(\"./routes/user.route\");\nconst blog = require(\"./routes/blog.route\");\nconst bodyParser = require(\"body-parser\");\nconst PORT = process.env.PORT || \"4000\";\nconst db = \"mongodb://localhost/fire\";\nconst app = express();\n\nmongoose\n  .connect(db)\n  .then(() => console.log(\"MongoDB connected\"))\n  .catch(err => console.log(err));\n\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(\"/user\", user);\napp.use(\"/blog\", blog);\n\napp.listen(PORT, () => console.log(`Server running on port ${PORT}`));\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1552727719801
  },
  "{\"sourceRoot\":\"/home/xtro/fire/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/xtro/fire\",\"filename\":\"/home/xtro/fire/routes/user.route.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/xtro/fire\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/xtro/fire/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/xtro/fire",
      "filename": "/home/xtro/fire/routes/user.route.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/xtro/fire",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/xtro/fire/routes/user.route.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/xtro/fire/routes/user.route.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/xtro/fire/routes",
        "sourceFileName": "user.route.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar express = require(\"express\");\n\nvar router = express.Router();\n\nvar user_controller = require(\"../controller/user.controller\");\n\nrouter.post(\"/registration\", user_controller.registration);\nrouter.post(\"/login\", user_controller.login);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIucm91dGUuanMiXSwibmFtZXMiOlsiZXhwcmVzcyIsInJlcXVpcmUiLCJyb3V0ZXIiLCJSb3V0ZXIiLCJ1c2VyX2NvbnRyb2xsZXIiLCJwb3N0IiwicmVnaXN0cmF0aW9uIiwibG9naW4iLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O0FBQ0EsSUFBTUMsTUFBTSxHQUFHRixPQUFPLENBQUNHLE1BQVIsRUFBZjs7QUFFQSxJQUFNQyxlQUFlLEdBQUdILE9BQU8sQ0FBQywrQkFBRCxDQUEvQjs7QUFFQUMsTUFBTSxDQUFDRyxJQUFQLENBQVksZUFBWixFQUE2QkQsZUFBZSxDQUFDRSxZQUE3QztBQUNBSixNQUFNLENBQUNHLElBQVAsQ0FBWSxRQUFaLEVBQXNCRCxlQUFlLENBQUNHLEtBQXRDO0FBRUFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQlAsTUFBakIiLCJzb3VyY2VSb290IjoiL2hvbWUveHRyby9maXJlL3JvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKFwiZXhwcmVzc1wiKTtcbmNvbnN0IHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XG5cbmNvbnN0IHVzZXJfY29udHJvbGxlciA9IHJlcXVpcmUoXCIuLi9jb250cm9sbGVyL3VzZXIuY29udHJvbGxlclwiKTtcblxucm91dGVyLnBvc3QoXCIvcmVnaXN0cmF0aW9uXCIsIHVzZXJfY29udHJvbGxlci5yZWdpc3RyYXRpb24pO1xucm91dGVyLnBvc3QoXCIvbG9naW5cIiwgdXNlcl9jb250cm9sbGVyLmxvZ2luKTtcblxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXI7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "user.route.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "user_controller",
        "post",
        "registration",
        "login",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAf;;AAEA,IAAMC,eAAe,GAAGH,OAAO,CAAC,+BAAD,CAA/B;;AAEAC,MAAM,CAACG,IAAP,CAAY,eAAZ,EAA6BD,eAAe,CAACE,YAA7C;AACAJ,MAAM,CAACG,IAAP,CAAY,QAAZ,EAAsBD,eAAe,CAACG,KAAtC;AAEAC,MAAM,CAACC,OAAP,GAAiBP,MAAjB",
      "sourceRoot": "/home/xtro/fire/routes",
      "sourcesContent": [
        "const express = require(\"express\");\nconst router = express.Router();\n\nconst user_controller = require(\"../controller/user.controller\");\n\nrouter.post(\"/registration\", user_controller.registration);\nrouter.post(\"/login\", user_controller.login);\n\nmodule.exports = router;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1552721956843
  },
  "{\"sourceRoot\":\"/home/xtro/fire/controller\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/xtro/fire\",\"filename\":\"/home/xtro/fire/controller/user.controller.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/xtro/fire\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/xtro/fire/controller",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/xtro/fire",
      "filename": "/home/xtro/fire/controller/user.controller.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/xtro/fire",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/xtro/fire/controller/user.controller.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/xtro/fire/controller/user.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/xtro/fire/controller",
        "sourceFileName": "user.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar User = require(\"../model/user.model\");\n\nexports.registration = function (req, res) {\n  var newUser = new User({\n    name: req.body.name,\n    mnumber: req.body.number,\n    type: req.body.type,\n    password: req.body.password\n  });\n  newUser.save(function (err) {\n    if (err) {\n      return next(err);\n    }\n\n    res.json({\n      message: \"success\"\n    });\n  });\n};\n\nexports.login = function (req, res) {\n  var result = User.find({\n    mnumber: req.body.number\n  }).select({\n    password: 1\n  }).exec(function (err, result) {\n    if (err) {\n      return res.json({\n        message: \"unscuccessful\"\n      });\n    } else if (result.length == 0) {\n      return res.json({\n        message: \"unsuccessful\"\n      });\n    } else if (result[0].password == req.body.password) {\n      res.json({\n        message: \"success\"\n      });\n    } else {\n      res.json({\n        message: \"unsuccessful\"\n      });\n    }\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIuY29udHJvbGxlci5qcyJdLCJuYW1lcyI6WyJVc2VyIiwicmVxdWlyZSIsImV4cG9ydHMiLCJyZWdpc3RyYXRpb24iLCJyZXEiLCJyZXMiLCJuZXdVc2VyIiwibmFtZSIsImJvZHkiLCJtbnVtYmVyIiwibnVtYmVyIiwidHlwZSIsInBhc3N3b3JkIiwic2F2ZSIsImVyciIsIm5leHQiLCJqc29uIiwibWVzc2FnZSIsImxvZ2luIiwicmVzdWx0IiwiZmluZCIsInNlbGVjdCIsImV4ZWMiLCJsZW5ndGgiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTUEsSUFBSSxHQUFHQyxPQUFPLENBQUMscUJBQUQsQ0FBcEI7O0FBRUFDLE9BQU8sQ0FBQ0MsWUFBUixHQUF1QixVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUNuQyxNQUFJQyxPQUFPLEdBQUcsSUFBSU4sSUFBSixDQUFTO0FBQ3JCTyxJQUFBQSxJQUFJLEVBQUVILEdBQUcsQ0FBQ0ksSUFBSixDQUFTRCxJQURNO0FBRXJCRSxJQUFBQSxPQUFPLEVBQUVMLEdBQUcsQ0FBQ0ksSUFBSixDQUFTRSxNQUZHO0FBR3JCQyxJQUFBQSxJQUFJLEVBQUVQLEdBQUcsQ0FBQ0ksSUFBSixDQUFTRyxJQUhNO0FBSXJCQyxJQUFBQSxRQUFRLEVBQUVSLEdBQUcsQ0FBQ0ksSUFBSixDQUFTSTtBQUpFLEdBQVQsQ0FBZDtBQU9BTixFQUFBQSxPQUFPLENBQUNPLElBQVIsQ0FBYSxVQUFBQyxHQUFHLEVBQUk7QUFDbEIsUUFBSUEsR0FBSixFQUFTO0FBQ1AsYUFBT0MsSUFBSSxDQUFDRCxHQUFELENBQVg7QUFDRDs7QUFDRFQsSUFBQUEsR0FBRyxDQUFDVyxJQUFKLENBQVM7QUFBRUMsTUFBQUEsT0FBTyxFQUFFO0FBQVgsS0FBVDtBQUNELEdBTEQ7QUFNRCxDQWREOztBQWdCQWYsT0FBTyxDQUFDZ0IsS0FBUixHQUFnQixVQUFDZCxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUM1QixNQUFNYyxNQUFNLEdBQUduQixJQUFJLENBQUNvQixJQUFMLENBQVU7QUFBRVgsSUFBQUEsT0FBTyxFQUFFTCxHQUFHLENBQUNJLElBQUosQ0FBU0U7QUFBcEIsR0FBVixFQUNaVyxNQURZLENBQ0w7QUFBRVQsSUFBQUEsUUFBUSxFQUFFO0FBQVosR0FESyxFQUVaVSxJQUZZLENBRVAsVUFBQ1IsR0FBRCxFQUFNSyxNQUFOLEVBQWlCO0FBQ3JCLFFBQUlMLEdBQUosRUFBUztBQUNQLGFBQU9ULEdBQUcsQ0FBQ1csSUFBSixDQUFTO0FBQUVDLFFBQUFBLE9BQU8sRUFBRTtBQUFYLE9BQVQsQ0FBUDtBQUNELEtBRkQsTUFFTyxJQUFJRSxNQUFNLENBQUNJLE1BQVAsSUFBaUIsQ0FBckIsRUFBd0I7QUFDN0IsYUFBT2xCLEdBQUcsQ0FBQ1csSUFBSixDQUFTO0FBQUVDLFFBQUFBLE9BQU8sRUFBRTtBQUFYLE9BQVQsQ0FBUDtBQUNELEtBRk0sTUFFQSxJQUFJRSxNQUFNLENBQUMsQ0FBRCxDQUFOLENBQVVQLFFBQVYsSUFBc0JSLEdBQUcsQ0FBQ0ksSUFBSixDQUFTSSxRQUFuQyxFQUE2QztBQUNsRFAsTUFBQUEsR0FBRyxDQUFDVyxJQUFKLENBQVM7QUFBRUMsUUFBQUEsT0FBTyxFQUFFO0FBQVgsT0FBVDtBQUNELEtBRk0sTUFFQTtBQUNMWixNQUFBQSxHQUFHLENBQUNXLElBQUosQ0FBUztBQUFFQyxRQUFBQSxPQUFPLEVBQUU7QUFBWCxPQUFUO0FBQ0Q7QUFDRixHQVpZLENBQWY7QUFhRCxDQWREIiwic291cmNlUm9vdCI6Ii9ob21lL3h0cm8vZmlyZS9jb250cm9sbGVyIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgVXNlciA9IHJlcXVpcmUoXCIuLi9tb2RlbC91c2VyLm1vZGVsXCIpO1xuXG5leHBvcnRzLnJlZ2lzdHJhdGlvbiA9IChyZXEsIHJlcykgPT4ge1xuICBsZXQgbmV3VXNlciA9IG5ldyBVc2VyKHtcbiAgICBuYW1lOiByZXEuYm9keS5uYW1lLFxuICAgIG1udW1iZXI6IHJlcS5ib2R5Lm51bWJlcixcbiAgICB0eXBlOiByZXEuYm9keS50eXBlLFxuICAgIHBhc3N3b3JkOiByZXEuYm9keS5wYXNzd29yZFxuICB9KTtcblxuICBuZXdVc2VyLnNhdmUoZXJyID0+IHtcbiAgICBpZiAoZXJyKSB7XG4gICAgICByZXR1cm4gbmV4dChlcnIpO1xuICAgIH1cbiAgICByZXMuanNvbih7IG1lc3NhZ2U6IFwic3VjY2Vzc1wiIH0pO1xuICB9KTtcbn07XG5cbmV4cG9ydHMubG9naW4gPSAocmVxLCByZXMpID0+IHtcbiAgY29uc3QgcmVzdWx0ID0gVXNlci5maW5kKHsgbW51bWJlcjogcmVxLmJvZHkubnVtYmVyIH0pXG4gICAgLnNlbGVjdCh7IHBhc3N3b3JkOiAxIH0pXG4gICAgLmV4ZWMoKGVyciwgcmVzdWx0KSA9PiB7XG4gICAgICBpZiAoZXJyKSB7XG4gICAgICAgIHJldHVybiByZXMuanNvbih7IG1lc3NhZ2U6IFwidW5zY3VjY2Vzc2Z1bFwiIH0pO1xuICAgICAgfSBlbHNlIGlmIChyZXN1bHQubGVuZ3RoID09IDApIHtcbiAgICAgICAgcmV0dXJuIHJlcy5qc29uKHsgbWVzc2FnZTogXCJ1bnN1Y2Nlc3NmdWxcIiB9KTtcbiAgICAgIH0gZWxzZSBpZiAocmVzdWx0WzBdLnBhc3N3b3JkID09IHJlcS5ib2R5LnBhc3N3b3JkKSB7XG4gICAgICAgIHJlcy5qc29uKHsgbWVzc2FnZTogXCJzdWNjZXNzXCIgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXMuanNvbih7IG1lc3NhZ2U6IFwidW5zdWNjZXNzZnVsXCIgfSk7XG4gICAgICB9XG4gICAgfSk7XG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "user.controller.js"
      ],
      "names": [
        "User",
        "require",
        "exports",
        "registration",
        "req",
        "res",
        "newUser",
        "name",
        "body",
        "mnumber",
        "number",
        "type",
        "password",
        "save",
        "err",
        "next",
        "json",
        "message",
        "login",
        "result",
        "find",
        "select",
        "exec",
        "length"
      ],
      "mappings": ";;AAAA,IAAMA,IAAI,GAAGC,OAAO,CAAC,qBAAD,CAApB;;AAEAC,OAAO,CAACC,YAAR,GAAuB,UAACC,GAAD,EAAMC,GAAN,EAAc;AACnC,MAAIC,OAAO,GAAG,IAAIN,IAAJ,CAAS;AACrBO,IAAAA,IAAI,EAAEH,GAAG,CAACI,IAAJ,CAASD,IADM;AAErBE,IAAAA,OAAO,EAAEL,GAAG,CAACI,IAAJ,CAASE,MAFG;AAGrBC,IAAAA,IAAI,EAAEP,GAAG,CAACI,IAAJ,CAASG,IAHM;AAIrBC,IAAAA,QAAQ,EAAER,GAAG,CAACI,IAAJ,CAASI;AAJE,GAAT,CAAd;AAOAN,EAAAA,OAAO,CAACO,IAAR,CAAa,UAAAC,GAAG,EAAI;AAClB,QAAIA,GAAJ,EAAS;AACP,aAAOC,IAAI,CAACD,GAAD,CAAX;AACD;;AACDT,IAAAA,GAAG,CAACW,IAAJ,CAAS;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAT;AACD,GALD;AAMD,CAdD;;AAgBAf,OAAO,CAACgB,KAAR,GAAgB,UAACd,GAAD,EAAMC,GAAN,EAAc;AAC5B,MAAMc,MAAM,GAAGnB,IAAI,CAACoB,IAAL,CAAU;AAAEX,IAAAA,OAAO,EAAEL,GAAG,CAACI,IAAJ,CAASE;AAApB,GAAV,EACZW,MADY,CACL;AAAET,IAAAA,QAAQ,EAAE;AAAZ,GADK,EAEZU,IAFY,CAEP,UAACR,GAAD,EAAMK,MAAN,EAAiB;AACrB,QAAIL,GAAJ,EAAS;AACP,aAAOT,GAAG,CAACW,IAAJ,CAAS;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAT,CAAP;AACD,KAFD,MAEO,IAAIE,MAAM,CAACI,MAAP,IAAiB,CAArB,EAAwB;AAC7B,aAAOlB,GAAG,CAACW,IAAJ,CAAS;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAT,CAAP;AACD,KAFM,MAEA,IAAIE,MAAM,CAAC,CAAD,CAAN,CAAUP,QAAV,IAAsBR,GAAG,CAACI,IAAJ,CAASI,QAAnC,EAA6C;AAClDP,MAAAA,GAAG,CAACW,IAAJ,CAAS;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAT;AACD,KAFM,MAEA;AACLZ,MAAAA,GAAG,CAACW,IAAJ,CAAS;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAT;AACD;AACF,GAZY,CAAf;AAaD,CAdD",
      "sourceRoot": "/home/xtro/fire/controller",
      "sourcesContent": [
        "const User = require(\"../model/user.model\");\n\nexports.registration = (req, res) => {\n  let newUser = new User({\n    name: req.body.name,\n    mnumber: req.body.number,\n    type: req.body.type,\n    password: req.body.password\n  });\n\n  newUser.save(err => {\n    if (err) {\n      return next(err);\n    }\n    res.json({ message: \"success\" });\n  });\n};\n\nexports.login = (req, res) => {\n  const result = User.find({ mnumber: req.body.number })\n    .select({ password: 1 })\n    .exec((err, result) => {\n      if (err) {\n        return res.json({ message: \"unscuccessful\" });\n      } else if (result.length == 0) {\n        return res.json({ message: \"unsuccessful\" });\n      } else if (result[0].password == req.body.password) {\n        res.json({ message: \"success\" });\n      } else {\n        res.json({ message: \"unsuccessful\" });\n      }\n    });\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1552723821174
  },
  "{\"sourceRoot\":\"/home/xtro/fire/model\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/xtro/fire\",\"filename\":\"/home/xtro/fire/model/user.model.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/xtro/fire\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/xtro/fire/model",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/xtro/fire",
      "filename": "/home/xtro/fire/model/user.model.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/xtro/fire",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/xtro/fire/model/user.model.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/xtro/fire/model/user.model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/xtro/fire/model",
        "sourceFileName": "user.model.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar mongoose = require(\"mongoose\");\n\nvar UserSchema = mongoose.Schema({\n  name: String,\n  mnumber: Number,\n  type: String,\n  password: String\n});\nvar User = mongoose.model(\"Register\", UserSchema);\nmodule.exports = User;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIubW9kZWwuanMiXSwibmFtZXMiOlsibW9uZ29vc2UiLCJyZXF1aXJlIiwiVXNlclNjaGVtYSIsIlNjaGVtYSIsIm5hbWUiLCJTdHJpbmciLCJtbnVtYmVyIiwiTnVtYmVyIiwidHlwZSIsInBhc3N3b3JkIiwiVXNlciIsIm1vZGVsIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFNQSxRQUFRLEdBQUdDLE9BQU8sQ0FBQyxVQUFELENBQXhCOztBQUVBLElBQU1DLFVBQVUsR0FBR0YsUUFBUSxDQUFDRyxNQUFULENBQWdCO0FBQ2pDQyxFQUFBQSxJQUFJLEVBQUVDLE1BRDJCO0FBRWpDQyxFQUFBQSxPQUFPLEVBQUVDLE1BRndCO0FBR2pDQyxFQUFBQSxJQUFJLEVBQUVILE1BSDJCO0FBSWpDSSxFQUFBQSxRQUFRLEVBQUVKO0FBSnVCLENBQWhCLENBQW5CO0FBTUEsSUFBTUssSUFBSSxHQUFHVixRQUFRLENBQUNXLEtBQVQsQ0FBZSxVQUFmLEVBQTJCVCxVQUEzQixDQUFiO0FBRUFVLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQkgsSUFBakIiLCJzb3VyY2VSb290IjoiL2hvbWUveHRyby9maXJlL21vZGVsIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgbW9uZ29vc2UgPSByZXF1aXJlKFwibW9uZ29vc2VcIik7XG5cbmNvbnN0IFVzZXJTY2hlbWEgPSBtb25nb29zZS5TY2hlbWEoe1xuICBuYW1lOiBTdHJpbmcsXG4gIG1udW1iZXI6IE51bWJlcixcbiAgdHlwZTogU3RyaW5nLFxuICBwYXNzd29yZDogU3RyaW5nXG59KTtcbmNvbnN0IFVzZXIgPSBtb25nb29zZS5tb2RlbChcIlJlZ2lzdGVyXCIsIFVzZXJTY2hlbWEpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFVzZXI7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "user.model.js"
      ],
      "names": [
        "mongoose",
        "require",
        "UserSchema",
        "Schema",
        "name",
        "String",
        "mnumber",
        "Number",
        "type",
        "password",
        "User",
        "model",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AAEA,IAAMC,UAAU,GAAGF,QAAQ,CAACG,MAAT,CAAgB;AACjCC,EAAAA,IAAI,EAAEC,MAD2B;AAEjCC,EAAAA,OAAO,EAAEC,MAFwB;AAGjCC,EAAAA,IAAI,EAAEH,MAH2B;AAIjCI,EAAAA,QAAQ,EAAEJ;AAJuB,CAAhB,CAAnB;AAMA,IAAMK,IAAI,GAAGV,QAAQ,CAACW,KAAT,CAAe,UAAf,EAA2BT,UAA3B,CAAb;AAEAU,MAAM,CAACC,OAAP,GAAiBH,IAAjB",
      "sourceRoot": "/home/xtro/fire/model",
      "sourcesContent": [
        "const mongoose = require(\"mongoose\");\n\nconst UserSchema = mongoose.Schema({\n  name: String,\n  mnumber: Number,\n  type: String,\n  password: String\n});\nconst User = mongoose.model(\"Register\", UserSchema);\n\nmodule.exports = User;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1552718962471
  },
  "{\"sourceRoot\":\"/home/xtro/fire/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/xtro/fire\",\"filename\":\"/home/xtro/fire/routes/blog.route.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/xtro/fire\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/xtro/fire/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/xtro/fire",
      "filename": "/home/xtro/fire/routes/blog.route.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/xtro/fire",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/xtro/fire/routes/blog.route.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/xtro/fire/routes/blog.route.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/xtro/fire/routes",
        "sourceFileName": "blog.route.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar express = require(\"express\");\n\nvar router = express.Router();\n\nvar blog_controller = require(\"../controller/blog.controller\");\n\nrouter.get(\"/viewer\", blog_controller.viewer);\nrouter.post(\"/sender\", blog_controller.sender);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJsb2cucm91dGUuanMiXSwibmFtZXMiOlsiZXhwcmVzcyIsInJlcXVpcmUiLCJyb3V0ZXIiLCJSb3V0ZXIiLCJibG9nX2NvbnRyb2xsZXIiLCJnZXQiLCJ2aWV3ZXIiLCJwb3N0Iiwic2VuZGVyIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFNQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXZCOztBQUNBLElBQU1DLE1BQU0sR0FBR0YsT0FBTyxDQUFDRyxNQUFSLEVBQWY7O0FBRUEsSUFBTUMsZUFBZSxHQUFHSCxPQUFPLENBQUMsK0JBQUQsQ0FBL0I7O0FBRUFDLE1BQU0sQ0FBQ0csR0FBUCxDQUFXLFNBQVgsRUFBc0JELGVBQWUsQ0FBQ0UsTUFBdEM7QUFDQUosTUFBTSxDQUFDSyxJQUFQLENBQVksU0FBWixFQUF1QkgsZUFBZSxDQUFDSSxNQUF2QztBQUVBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJSLE1BQWpCIiwic291cmNlUm9vdCI6Ii9ob21lL3h0cm8vZmlyZS9yb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBleHByZXNzID0gcmVxdWlyZShcImV4cHJlc3NcIik7XG5jb25zdCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xuXG5jb25zdCBibG9nX2NvbnRyb2xsZXIgPSByZXF1aXJlKFwiLi4vY29udHJvbGxlci9ibG9nLmNvbnRyb2xsZXJcIik7XG5cbnJvdXRlci5nZXQoXCIvdmlld2VyXCIsIGJsb2dfY29udHJvbGxlci52aWV3ZXIpO1xucm91dGVyLnBvc3QoXCIvc2VuZGVyXCIsIGJsb2dfY29udHJvbGxlci5zZW5kZXIpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlcjtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "blog.route.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "blog_controller",
        "get",
        "viewer",
        "post",
        "sender",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAf;;AAEA,IAAMC,eAAe,GAAGH,OAAO,CAAC,+BAAD,CAA/B;;AAEAC,MAAM,CAACG,GAAP,CAAW,SAAX,EAAsBD,eAAe,CAACE,MAAtC;AACAJ,MAAM,CAACK,IAAP,CAAY,SAAZ,EAAuBH,eAAe,CAACI,MAAvC;AAEAC,MAAM,CAACC,OAAP,GAAiBR,MAAjB",
      "sourceRoot": "/home/xtro/fire/routes",
      "sourcesContent": [
        "const express = require(\"express\");\nconst router = express.Router();\n\nconst blog_controller = require(\"../controller/blog.controller\");\n\nrouter.get(\"/viewer\", blog_controller.viewer);\nrouter.post(\"/sender\", blog_controller.sender);\n\nmodule.exports = router;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1552727713589
  },
  "{\"sourceRoot\":\"/home/xtro/fire/controller\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/xtro/fire\",\"filename\":\"/home/xtro/fire/controller/blog.controller.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/xtro/fire\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/xtro/fire/controller",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/xtro/fire",
      "filename": "/home/xtro/fire/controller/blog.controller.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/xtro/fire",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/xtro/fire/controller/blog.controller.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/xtro/fire/controller/blog.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/xtro/fire/controller",
        "sourceFileName": "blog.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar Blog = require(\"../model/blog.model\");\n\nexports.viewer = function (req, res) {\n  var result = Blog.find().select({\n    question: 1,\n    answer: 1\n  }).exec(function (err, result) {\n    if (err) {\n      return next(err);\n    } else {\n      res.send(result);\n    }\n  });\n};\n\nexports.sender = function (req, res) {\n  var newBlog = new Blog({\n    question: req.body.question,\n    answer: req.body.answer\n  });\n  newBlog.save(function (err) {\n    if (err) {\n      return next(err);\n    }\n\n    res.json({\n      message: \"success\"\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJsb2cuY29udHJvbGxlci5qcyJdLCJuYW1lcyI6WyJCbG9nIiwicmVxdWlyZSIsImV4cG9ydHMiLCJ2aWV3ZXIiLCJyZXEiLCJyZXMiLCJyZXN1bHQiLCJmaW5kIiwic2VsZWN0IiwicXVlc3Rpb24iLCJhbnN3ZXIiLCJleGVjIiwiZXJyIiwibmV4dCIsInNlbmQiLCJzZW5kZXIiLCJuZXdCbG9nIiwiYm9keSIsInNhdmUiLCJqc29uIiwibWVzc2FnZSJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFNQSxJQUFJLEdBQUdDLE9BQU8sQ0FBQyxxQkFBRCxDQUFwQjs7QUFFQUMsT0FBTyxDQUFDQyxNQUFSLEdBQWlCLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQzdCLE1BQU1DLE1BQU0sR0FBR04sSUFBSSxDQUFDTyxJQUFMLEdBQ1pDLE1BRFksQ0FDTDtBQUFFQyxJQUFBQSxRQUFRLEVBQUUsQ0FBWjtBQUFlQyxJQUFBQSxNQUFNLEVBQUU7QUFBdkIsR0FESyxFQUVaQyxJQUZZLENBRVAsVUFBQ0MsR0FBRCxFQUFNTixNQUFOLEVBQWlCO0FBQ3JCLFFBQUlNLEdBQUosRUFBUztBQUNQLGFBQU9DLElBQUksQ0FBQ0QsR0FBRCxDQUFYO0FBQ0QsS0FGRCxNQUVPO0FBQ0xQLE1BQUFBLEdBQUcsQ0FBQ1MsSUFBSixDQUFTUixNQUFUO0FBQ0Q7QUFDRixHQVJZLENBQWY7QUFTRCxDQVZEOztBQVlBSixPQUFPLENBQUNhLE1BQVIsR0FBaUIsVUFBQ1gsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDN0IsTUFBSVcsT0FBTyxHQUFHLElBQUloQixJQUFKLENBQVM7QUFDckJTLElBQUFBLFFBQVEsRUFBRUwsR0FBRyxDQUFDYSxJQUFKLENBQVNSLFFBREU7QUFFckJDLElBQUFBLE1BQU0sRUFBRU4sR0FBRyxDQUFDYSxJQUFKLENBQVNQO0FBRkksR0FBVCxDQUFkO0FBS0FNLEVBQUFBLE9BQU8sQ0FBQ0UsSUFBUixDQUFhLFVBQUFOLEdBQUcsRUFBSTtBQUNsQixRQUFJQSxHQUFKLEVBQVM7QUFDUCxhQUFPQyxJQUFJLENBQUNELEdBQUQsQ0FBWDtBQUNEOztBQUNEUCxJQUFBQSxHQUFHLENBQUNjLElBQUosQ0FBUztBQUFFQyxNQUFBQSxPQUFPLEVBQUU7QUFBWCxLQUFUO0FBQ0QsR0FMRDtBQU1ELENBWkQiLCJzb3VyY2VSb290IjoiL2hvbWUveHRyby9maXJlL2NvbnRyb2xsZXIiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBCbG9nID0gcmVxdWlyZShcIi4uL21vZGVsL2Jsb2cubW9kZWxcIik7XG5cbmV4cG9ydHMudmlld2VyID0gKHJlcSwgcmVzKSA9PiB7XG4gIGNvbnN0IHJlc3VsdCA9IEJsb2cuZmluZCgpXG4gICAgLnNlbGVjdCh7IHF1ZXN0aW9uOiAxLCBhbnN3ZXI6IDEgfSlcbiAgICAuZXhlYygoZXJyLCByZXN1bHQpID0+IHtcbiAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgcmV0dXJuIG5leHQoZXJyKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJlcy5zZW5kKHJlc3VsdCk7XG4gICAgICB9XG4gICAgfSk7XG59O1xuXG5leHBvcnRzLnNlbmRlciA9IChyZXEsIHJlcykgPT4ge1xuICBsZXQgbmV3QmxvZyA9IG5ldyBCbG9nKHtcbiAgICBxdWVzdGlvbjogcmVxLmJvZHkucXVlc3Rpb24sXG4gICAgYW5zd2VyOiByZXEuYm9keS5hbnN3ZXJcbiAgfSk7XG5cbiAgbmV3QmxvZy5zYXZlKGVyciA9PiB7XG4gICAgaWYgKGVycikge1xuICAgICAgcmV0dXJuIG5leHQoZXJyKTtcbiAgICB9XG4gICAgcmVzLmpzb24oeyBtZXNzYWdlOiBcInN1Y2Nlc3NcIiB9KTtcbiAgfSk7XG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "blog.controller.js"
      ],
      "names": [
        "Blog",
        "require",
        "exports",
        "viewer",
        "req",
        "res",
        "result",
        "find",
        "select",
        "question",
        "answer",
        "exec",
        "err",
        "next",
        "send",
        "sender",
        "newBlog",
        "body",
        "save",
        "json",
        "message"
      ],
      "mappings": ";;AAAA,IAAMA,IAAI,GAAGC,OAAO,CAAC,qBAAD,CAApB;;AAEAC,OAAO,CAACC,MAAR,GAAiB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC7B,MAAMC,MAAM,GAAGN,IAAI,CAACO,IAAL,GACZC,MADY,CACL;AAAEC,IAAAA,QAAQ,EAAE,CAAZ;AAAeC,IAAAA,MAAM,EAAE;AAAvB,GADK,EAEZC,IAFY,CAEP,UAACC,GAAD,EAAMN,MAAN,EAAiB;AACrB,QAAIM,GAAJ,EAAS;AACP,aAAOC,IAAI,CAACD,GAAD,CAAX;AACD,KAFD,MAEO;AACLP,MAAAA,GAAG,CAACS,IAAJ,CAASR,MAAT;AACD;AACF,GARY,CAAf;AASD,CAVD;;AAYAJ,OAAO,CAACa,MAAR,GAAiB,UAACX,GAAD,EAAMC,GAAN,EAAc;AAC7B,MAAIW,OAAO,GAAG,IAAIhB,IAAJ,CAAS;AACrBS,IAAAA,QAAQ,EAAEL,GAAG,CAACa,IAAJ,CAASR,QADE;AAErBC,IAAAA,MAAM,EAAEN,GAAG,CAACa,IAAJ,CAASP;AAFI,GAAT,CAAd;AAKAM,EAAAA,OAAO,CAACE,IAAR,CAAa,UAAAN,GAAG,EAAI;AAClB,QAAIA,GAAJ,EAAS;AACP,aAAOC,IAAI,CAACD,GAAD,CAAX;AACD;;AACDP,IAAAA,GAAG,CAACc,IAAJ,CAAS;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAT;AACD,GALD;AAMD,CAZD",
      "sourceRoot": "/home/xtro/fire/controller",
      "sourcesContent": [
        "const Blog = require(\"../model/blog.model\");\n\nexports.viewer = (req, res) => {\n  const result = Blog.find()\n    .select({ question: 1, answer: 1 })\n    .exec((err, result) => {\n      if (err) {\n        return next(err);\n      } else {\n        res.send(result);\n      }\n    });\n};\n\nexports.sender = (req, res) => {\n  let newBlog = new Blog({\n    question: req.body.question,\n    answer: req.body.answer\n  });\n\n  newBlog.save(err => {\n    if (err) {\n      return next(err);\n    }\n    res.json({ message: \"success\" });\n  });\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1552728158796
  },
  "{\"sourceRoot\":\"/home/xtro/fire/model\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/xtro/fire\",\"filename\":\"/home/xtro/fire/model/blog.model.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/xtro/fire\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/xtro/fire/model",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/xtro/fire",
      "filename": "/home/xtro/fire/model/blog.model.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/xtro/fire",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/xtro/fire/model/blog.model.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/xtro/fire/model/blog.model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/xtro/fire/model",
        "sourceFileName": "blog.model.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar mongoose = require(\"mongoose\");\n\nvar BlogSchema = mongoose.Schema({\n  question: String,\n  answer: String\n});\nvar Blog = mongoose.model(\"Blog\", BlogSchema);\nmodule.exports = Blog;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJsb2cubW9kZWwuanMiXSwibmFtZXMiOlsibW9uZ29vc2UiLCJyZXF1aXJlIiwiQmxvZ1NjaGVtYSIsIlNjaGVtYSIsInF1ZXN0aW9uIiwiU3RyaW5nIiwiYW5zd2VyIiwiQmxvZyIsIm1vZGVsIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFNQSxRQUFRLEdBQUdDLE9BQU8sQ0FBQyxVQUFELENBQXhCOztBQUVBLElBQU1DLFVBQVUsR0FBR0YsUUFBUSxDQUFDRyxNQUFULENBQWdCO0FBQ2pDQyxFQUFBQSxRQUFRLEVBQUVDLE1BRHVCO0FBRWpDQyxFQUFBQSxNQUFNLEVBQUVEO0FBRnlCLENBQWhCLENBQW5CO0FBSUEsSUFBTUUsSUFBSSxHQUFHUCxRQUFRLENBQUNRLEtBQVQsQ0FBZSxNQUFmLEVBQXVCTixVQUF2QixDQUFiO0FBRUFPLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQkgsSUFBakIiLCJzb3VyY2VSb290IjoiL2hvbWUveHRyby9maXJlL21vZGVsIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgbW9uZ29vc2UgPSByZXF1aXJlKFwibW9uZ29vc2VcIik7XG5cbmNvbnN0IEJsb2dTY2hlbWEgPSBtb25nb29zZS5TY2hlbWEoe1xuICBxdWVzdGlvbjogU3RyaW5nLFxuICBhbnN3ZXI6IFN0cmluZ1xufSk7XG5jb25zdCBCbG9nID0gbW9uZ29vc2UubW9kZWwoXCJCbG9nXCIsIEJsb2dTY2hlbWEpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IEJsb2c7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "blog.model.js"
      ],
      "names": [
        "mongoose",
        "require",
        "BlogSchema",
        "Schema",
        "question",
        "String",
        "answer",
        "Blog",
        "model",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AAEA,IAAMC,UAAU,GAAGF,QAAQ,CAACG,MAAT,CAAgB;AACjCC,EAAAA,QAAQ,EAAEC,MADuB;AAEjCC,EAAAA,MAAM,EAAED;AAFyB,CAAhB,CAAnB;AAIA,IAAME,IAAI,GAAGP,QAAQ,CAACQ,KAAT,CAAe,MAAf,EAAuBN,UAAvB,CAAb;AAEAO,MAAM,CAACC,OAAP,GAAiBH,IAAjB",
      "sourceRoot": "/home/xtro/fire/model",
      "sourcesContent": [
        "const mongoose = require(\"mongoose\");\n\nconst BlogSchema = mongoose.Schema({\n  question: String,\n  answer: String\n});\nconst Blog = mongoose.model(\"Blog\", BlogSchema);\n\nmodule.exports = Blog;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1552727715229
  },
  "{\"sourceRoot\":\"/home/xtro/firebrigade\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/xtro/firebrigade\",\"filename\":\"/home/xtro/firebrigade/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/xtro/firebrigade\",\"plugins\":[],\"presets\":[]}:7.3.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/xtro/firebrigade",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/xtro/firebrigade",
      "filename": "/home/xtro/firebrigade/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/xtro/firebrigade",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/xtro/firebrigade/index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/xtro/firebrigade/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/xtro/firebrigade",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "const express = require(\"express\");\n\nconst mongoose = require(\"mongoose\");\n\nconst user = require(\"./routes/user.route\");\n\nconst blog = require(\"./routes/blog.route\");\n\nconst event = require(\"./routes/event.route\");\n\nconst chatbot = require(\"./routes/chatbot.route\");\n\nconst bodyParser = require(\"body-parser\");\n\nconst http = require(\"http\");\n\nconst app = express();\nconst server = http.createServer(app);\n\nconst axios = require(\"axios\");\n\nvar io = require(\"socket.io\").listen(server);\n\nconst PORT = process.env.PORT || \"3000\";\nconst db = \"mongodb://localhost/fire\";\nmongoose.connect(db).then(() => console.log(\"MongoDB connected\")).catch(err => console.log(err));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({\n  extended: false\n}));\napp.use(\"/user\", user);\napp.use(\"/blog\", blog);\napp.use(\"/event\", event);\napp.use(\"/chatbot\", chatbot);\nio.on(\"connection\", socket => {\n  console.log(\"user connected\");\n  socket.on(\"messagedetection\", (senderNickname, messageContent) => {\n    axios.post(\"http://127.0.0.1:3000/chatbot/bot\", {\n      input: messageContent\n    }).then(res => {\n      let message = {\n        message: res.data.reply,\n        senderNickname: \"Chatbot\"\n      };\n      io.emit(\"message\", message);\n    });\n  });\n});\nserver.listen(PORT, () => console.log(`Server running on port ${PORT}`));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwibW9uZ29vc2UiLCJ1c2VyIiwiYmxvZyIsImV2ZW50IiwiY2hhdGJvdCIsImJvZHlQYXJzZXIiLCJodHRwIiwiYXBwIiwic2VydmVyIiwiY3JlYXRlU2VydmVyIiwiYXhpb3MiLCJpbyIsImxpc3RlbiIsIlBPUlQiLCJwcm9jZXNzIiwiZW52IiwiZGIiLCJjb25uZWN0IiwidGhlbiIsImNvbnNvbGUiLCJsb2ciLCJjYXRjaCIsImVyciIsInVzZSIsImpzb24iLCJ1cmxlbmNvZGVkIiwiZXh0ZW5kZWQiLCJvbiIsInNvY2tldCIsInNlbmRlck5pY2tuYW1lIiwibWVzc2FnZUNvbnRlbnQiLCJwb3N0IiwiaW5wdXQiLCJyZXMiLCJtZXNzYWdlIiwiZGF0YSIsInJlcGx5IiwiZW1pdCJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFDQSxNQUFNQyxRQUFRLEdBQUdELE9BQU8sQ0FBQyxVQUFELENBQXhCOztBQUNBLE1BQU1FLElBQUksR0FBR0YsT0FBTyxDQUFDLHFCQUFELENBQXBCOztBQUNBLE1BQU1HLElBQUksR0FBR0gsT0FBTyxDQUFDLHFCQUFELENBQXBCOztBQUNBLE1BQU1JLEtBQUssR0FBR0osT0FBTyxDQUFDLHNCQUFELENBQXJCOztBQUNBLE1BQU1LLE9BQU8sR0FBR0wsT0FBTyxDQUFDLHdCQUFELENBQXZCOztBQUNBLE1BQU1NLFVBQVUsR0FBR04sT0FBTyxDQUFDLGFBQUQsQ0FBMUI7O0FBQ0EsTUFBTU8sSUFBSSxHQUFHUCxPQUFPLENBQUMsTUFBRCxDQUFwQjs7QUFDQSxNQUFNUSxHQUFHLEdBQUdULE9BQU8sRUFBbkI7QUFDQSxNQUFNVSxNQUFNLEdBQUdGLElBQUksQ0FBQ0csWUFBTCxDQUFrQkYsR0FBbEIsQ0FBZjs7QUFDQSxNQUFNRyxLQUFLLEdBQUdYLE9BQU8sQ0FBQyxPQUFELENBQXJCOztBQUNBLElBQUlZLEVBQUUsR0FBR1osT0FBTyxDQUFDLFdBQUQsQ0FBUCxDQUFxQmEsTUFBckIsQ0FBNEJKLE1BQTVCLENBQVQ7O0FBQ0EsTUFBTUssSUFBSSxHQUFHQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUYsSUFBWixJQUFvQixNQUFqQztBQUNBLE1BQU1HLEVBQUUsR0FBRywwQkFBWDtBQUVBaEIsUUFBUSxDQUNMaUIsT0FESCxDQUNXRCxFQURYLEVBRUdFLElBRkgsQ0FFUSxNQUFNQyxPQUFPLENBQUNDLEdBQVIsQ0FBWSxtQkFBWixDQUZkLEVBR0dDLEtBSEgsQ0FHU0MsR0FBRyxJQUFJSCxPQUFPLENBQUNDLEdBQVIsQ0FBWUUsR0FBWixDQUhoQjtBQUtBZixHQUFHLENBQUNnQixHQUFKLENBQVFsQixVQUFVLENBQUNtQixJQUFYLEVBQVI7QUFDQWpCLEdBQUcsQ0FBQ2dCLEdBQUosQ0FBUWxCLFVBQVUsQ0FBQ29CLFVBQVgsQ0FBc0I7QUFBRUMsRUFBQUEsUUFBUSxFQUFFO0FBQVosQ0FBdEIsQ0FBUjtBQUNBbkIsR0FBRyxDQUFDZ0IsR0FBSixDQUFRLE9BQVIsRUFBaUJ0QixJQUFqQjtBQUNBTSxHQUFHLENBQUNnQixHQUFKLENBQVEsT0FBUixFQUFpQnJCLElBQWpCO0FBQ0FLLEdBQUcsQ0FBQ2dCLEdBQUosQ0FBUSxRQUFSLEVBQWtCcEIsS0FBbEI7QUFDQUksR0FBRyxDQUFDZ0IsR0FBSixDQUFRLFVBQVIsRUFBb0JuQixPQUFwQjtBQUVBTyxFQUFFLENBQUNnQixFQUFILENBQU0sWUFBTixFQUFvQkMsTUFBTSxJQUFJO0FBQzVCVCxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxnQkFBWjtBQUVBUSxFQUFBQSxNQUFNLENBQUNELEVBQVAsQ0FBVSxrQkFBVixFQUE4QixDQUFDRSxjQUFELEVBQWlCQyxjQUFqQixLQUFvQztBQUNoRXBCLElBQUFBLEtBQUssQ0FDRnFCLElBREgsQ0FDUSxtQ0FEUixFQUM2QztBQUN6Q0MsTUFBQUEsS0FBSyxFQUFFRjtBQURrQyxLQUQ3QyxFQUlHWixJQUpILENBSVFlLEdBQUcsSUFBSTtBQUNYLFVBQUlDLE9BQU8sR0FBRztBQUFFQSxRQUFBQSxPQUFPLEVBQUVELEdBQUcsQ0FBQ0UsSUFBSixDQUFTQyxLQUFwQjtBQUEyQlAsUUFBQUEsY0FBYyxFQUFFO0FBQTNDLE9BQWQ7QUFDQWxCLE1BQUFBLEVBQUUsQ0FBQzBCLElBQUgsQ0FBUSxTQUFSLEVBQW1CSCxPQUFuQjtBQUNELEtBUEg7QUFRRCxHQVREO0FBVUQsQ0FiRDtBQWVBMUIsTUFBTSxDQUFDSSxNQUFQLENBQWNDLElBQWQsRUFBb0IsTUFBTU0sT0FBTyxDQUFDQyxHQUFSLENBQWEsMEJBQXlCUCxJQUFLLEVBQTNDLENBQTFCIiwic291cmNlUm9vdCI6Ii9ob21lL3h0cm8vZmlyZWJyaWdhZGUiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBleHByZXNzID0gcmVxdWlyZShcImV4cHJlc3NcIik7XG5jb25zdCBtb25nb29zZSA9IHJlcXVpcmUoXCJtb25nb29zZVwiKTtcbmNvbnN0IHVzZXIgPSByZXF1aXJlKFwiLi9yb3V0ZXMvdXNlci5yb3V0ZVwiKTtcbmNvbnN0IGJsb2cgPSByZXF1aXJlKFwiLi9yb3V0ZXMvYmxvZy5yb3V0ZVwiKTtcbmNvbnN0IGV2ZW50ID0gcmVxdWlyZShcIi4vcm91dGVzL2V2ZW50LnJvdXRlXCIpO1xuY29uc3QgY2hhdGJvdCA9IHJlcXVpcmUoXCIuL3JvdXRlcy9jaGF0Ym90LnJvdXRlXCIpO1xuY29uc3QgYm9keVBhcnNlciA9IHJlcXVpcmUoXCJib2R5LXBhcnNlclwiKTtcbmNvbnN0IGh0dHAgPSByZXF1aXJlKFwiaHR0cFwiKTtcbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcbmNvbnN0IHNlcnZlciA9IGh0dHAuY3JlYXRlU2VydmVyKGFwcCk7XG5jb25zdCBheGlvcyA9IHJlcXVpcmUoXCJheGlvc1wiKTtcbnZhciBpbyA9IHJlcXVpcmUoXCJzb2NrZXQuaW9cIikubGlzdGVuKHNlcnZlcik7XG5jb25zdCBQT1JUID0gcHJvY2Vzcy5lbnYuUE9SVCB8fCBcIjMwMDBcIjtcbmNvbnN0IGRiID0gXCJtb25nb2RiOi8vbG9jYWxob3N0L2ZpcmVcIjtcblxubW9uZ29vc2VcbiAgLmNvbm5lY3QoZGIpXG4gIC50aGVuKCgpID0+IGNvbnNvbGUubG9nKFwiTW9uZ29EQiBjb25uZWN0ZWRcIikpXG4gIC5jYXRjaChlcnIgPT4gY29uc29sZS5sb2coZXJyKSk7XG5cbmFwcC51c2UoYm9keVBhcnNlci5qc29uKCkpO1xuYXBwLnVzZShib2R5UGFyc2VyLnVybGVuY29kZWQoeyBleHRlbmRlZDogZmFsc2UgfSkpO1xuYXBwLnVzZShcIi91c2VyXCIsIHVzZXIpO1xuYXBwLnVzZShcIi9ibG9nXCIsIGJsb2cpO1xuYXBwLnVzZShcIi9ldmVudFwiLCBldmVudCk7XG5hcHAudXNlKFwiL2NoYXRib3RcIiwgY2hhdGJvdCk7XG5cbmlvLm9uKFwiY29ubmVjdGlvblwiLCBzb2NrZXQgPT4ge1xuICBjb25zb2xlLmxvZyhcInVzZXIgY29ubmVjdGVkXCIpO1xuXG4gIHNvY2tldC5vbihcIm1lc3NhZ2VkZXRlY3Rpb25cIiwgKHNlbmRlck5pY2tuYW1lLCBtZXNzYWdlQ29udGVudCkgPT4ge1xuICAgIGF4aW9zXG4gICAgICAucG9zdChcImh0dHA6Ly8xMjcuMC4wLjE6MzAwMC9jaGF0Ym90L2JvdFwiLCB7XG4gICAgICAgIGlucHV0OiBtZXNzYWdlQ29udGVudFxuICAgICAgfSlcbiAgICAgIC50aGVuKHJlcyA9PiB7XG4gICAgICAgIGxldCBtZXNzYWdlID0geyBtZXNzYWdlOiByZXMuZGF0YS5yZXBseSwgc2VuZGVyTmlja25hbWU6IFwiQ2hhdGJvdFwiIH07XG4gICAgICAgIGlvLmVtaXQoXCJtZXNzYWdlXCIsIG1lc3NhZ2UpO1xuICAgICAgfSk7XG4gIH0pO1xufSk7XG5cbnNlcnZlci5saXN0ZW4oUE9SVCwgKCkgPT4gY29uc29sZS5sb2coYFNlcnZlciBydW5uaW5nIG9uIHBvcnQgJHtQT1JUfWApKTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "express",
        "require",
        "mongoose",
        "user",
        "blog",
        "event",
        "chatbot",
        "bodyParser",
        "http",
        "app",
        "server",
        "createServer",
        "axios",
        "io",
        "listen",
        "PORT",
        "process",
        "env",
        "db",
        "connect",
        "then",
        "console",
        "log",
        "catch",
        "err",
        "use",
        "json",
        "urlencoded",
        "extended",
        "on",
        "socket",
        "senderNickname",
        "messageContent",
        "post",
        "input",
        "res",
        "message",
        "data",
        "reply",
        "emit"
      ],
      "mappings": "AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,QAAQ,GAAGD,OAAO,CAAC,UAAD,CAAxB;;AACA,MAAME,IAAI,GAAGF,OAAO,CAAC,qBAAD,CAApB;;AACA,MAAMG,IAAI,GAAGH,OAAO,CAAC,qBAAD,CAApB;;AACA,MAAMI,KAAK,GAAGJ,OAAO,CAAC,sBAAD,CAArB;;AACA,MAAMK,OAAO,GAAGL,OAAO,CAAC,wBAAD,CAAvB;;AACA,MAAMM,UAAU,GAAGN,OAAO,CAAC,aAAD,CAA1B;;AACA,MAAMO,IAAI,GAAGP,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMQ,GAAG,GAAGT,OAAO,EAAnB;AACA,MAAMU,MAAM,GAAGF,IAAI,CAACG,YAAL,CAAkBF,GAAlB,CAAf;;AACA,MAAMG,KAAK,GAAGX,OAAO,CAAC,OAAD,CAArB;;AACA,IAAIY,EAAE,GAAGZ,OAAO,CAAC,WAAD,CAAP,CAAqBa,MAArB,CAA4BJ,MAA5B,CAAT;;AACA,MAAMK,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYF,IAAZ,IAAoB,MAAjC;AACA,MAAMG,EAAE,GAAG,0BAAX;AAEAhB,QAAQ,CACLiB,OADH,CACWD,EADX,EAEGE,IAFH,CAEQ,MAAMC,OAAO,CAACC,GAAR,CAAY,mBAAZ,CAFd,EAGGC,KAHH,CAGSC,GAAG,IAAIH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAHhB;AAKAf,GAAG,CAACgB,GAAJ,CAAQlB,UAAU,CAACmB,IAAX,EAAR;AACAjB,GAAG,CAACgB,GAAJ,CAAQlB,UAAU,CAACoB,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR;AACAnB,GAAG,CAACgB,GAAJ,CAAQ,OAAR,EAAiBtB,IAAjB;AACAM,GAAG,CAACgB,GAAJ,CAAQ,OAAR,EAAiBrB,IAAjB;AACAK,GAAG,CAACgB,GAAJ,CAAQ,QAAR,EAAkBpB,KAAlB;AACAI,GAAG,CAACgB,GAAJ,CAAQ,UAAR,EAAoBnB,OAApB;AAEAO,EAAE,CAACgB,EAAH,CAAM,YAAN,EAAoBC,MAAM,IAAI;AAC5BT,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AAEAQ,EAAAA,MAAM,CAACD,EAAP,CAAU,kBAAV,EAA8B,CAACE,cAAD,EAAiBC,cAAjB,KAAoC;AAChEpB,IAAAA,KAAK,CACFqB,IADH,CACQ,mCADR,EAC6C;AACzCC,MAAAA,KAAK,EAAEF;AADkC,KAD7C,EAIGZ,IAJH,CAIQe,GAAG,IAAI;AACX,UAAIC,OAAO,GAAG;AAAEA,QAAAA,OAAO,EAAED,GAAG,CAACE,IAAJ,CAASC,KAApB;AAA2BP,QAAAA,cAAc,EAAE;AAA3C,OAAd;AACAlB,MAAAA,EAAE,CAAC0B,IAAH,CAAQ,SAAR,EAAmBH,OAAnB;AACD,KAPH;AAQD,GATD;AAUD,CAbD;AAeA1B,MAAM,CAACI,MAAP,CAAcC,IAAd,EAAoB,MAAMM,OAAO,CAACC,GAAR,CAAa,0BAAyBP,IAAK,EAA3C,CAA1B",
      "sourceRoot": "/home/xtro/firebrigade",
      "sourcesContent": [
        "const express = require(\"express\");\nconst mongoose = require(\"mongoose\");\nconst user = require(\"./routes/user.route\");\nconst blog = require(\"./routes/blog.route\");\nconst event = require(\"./routes/event.route\");\nconst chatbot = require(\"./routes/chatbot.route\");\nconst bodyParser = require(\"body-parser\");\nconst http = require(\"http\");\nconst app = express();\nconst server = http.createServer(app);\nconst axios = require(\"axios\");\nvar io = require(\"socket.io\").listen(server);\nconst PORT = process.env.PORT || \"3000\";\nconst db = \"mongodb://localhost/fire\";\n\nmongoose\n  .connect(db)\n  .then(() => console.log(\"MongoDB connected\"))\n  .catch(err => console.log(err));\n\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(\"/user\", user);\napp.use(\"/blog\", blog);\napp.use(\"/event\", event);\napp.use(\"/chatbot\", chatbot);\n\nio.on(\"connection\", socket => {\n  console.log(\"user connected\");\n\n  socket.on(\"messagedetection\", (senderNickname, messageContent) => {\n    axios\n      .post(\"http://127.0.0.1:3000/chatbot/bot\", {\n        input: messageContent\n      })\n      .then(res => {\n        let message = { message: res.data.reply, senderNickname: \"Chatbot\" };\n        io.emit(\"message\", message);\n      });\n  });\n});\n\nserver.listen(PORT, () => console.log(`Server running on port ${PORT}`));\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1552772112019
  },
  "{\"sourceRoot\":\"/home/xtro/firebrigade/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/xtro/firebrigade\",\"filename\":\"/home/xtro/firebrigade/routes/user.route.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/xtro/firebrigade\",\"plugins\":[],\"presets\":[]}:7.3.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/xtro/firebrigade/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/xtro/firebrigade",
      "filename": "/home/xtro/firebrigade/routes/user.route.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/xtro/firebrigade",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/xtro/firebrigade/routes/user.route.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/xtro/firebrigade/routes/user.route.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/xtro/firebrigade/routes",
        "sourceFileName": "user.route.js"
      }
    },
    "ast": null,
    "code": "const express = require(\"express\");\n\nconst router = express.Router();\n\nconst user_controller = require(\"../controller/user.controller\");\n\nrouter.post(\"/registration\", user_controller.registration);\nrouter.post(\"/login\", user_controller.login);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIucm91dGUuanMiXSwibmFtZXMiOlsiZXhwcmVzcyIsInJlcXVpcmUiLCJyb3V0ZXIiLCJSb3V0ZXIiLCJ1c2VyX2NvbnRyb2xsZXIiLCJwb3N0IiwicmVnaXN0cmF0aW9uIiwibG9naW4iLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXZCOztBQUNBLE1BQU1DLE1BQU0sR0FBR0YsT0FBTyxDQUFDRyxNQUFSLEVBQWY7O0FBRUEsTUFBTUMsZUFBZSxHQUFHSCxPQUFPLENBQUMsK0JBQUQsQ0FBL0I7O0FBRUFDLE1BQU0sQ0FBQ0csSUFBUCxDQUFZLGVBQVosRUFBNkJELGVBQWUsQ0FBQ0UsWUFBN0M7QUFDQUosTUFBTSxDQUFDRyxJQUFQLENBQVksUUFBWixFQUFzQkQsZUFBZSxDQUFDRyxLQUF0QztBQUVBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJQLE1BQWpCIiwic291cmNlUm9vdCI6Ii9ob21lL3h0cm8vZmlyZWJyaWdhZGUvcm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoXCJleHByZXNzXCIpO1xuY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcblxuY29uc3QgdXNlcl9jb250cm9sbGVyID0gcmVxdWlyZShcIi4uL2NvbnRyb2xsZXIvdXNlci5jb250cm9sbGVyXCIpO1xuXG5yb3V0ZXIucG9zdChcIi9yZWdpc3RyYXRpb25cIiwgdXNlcl9jb250cm9sbGVyLnJlZ2lzdHJhdGlvbik7XG5yb3V0ZXIucG9zdChcIi9sb2dpblwiLCB1c2VyX2NvbnRyb2xsZXIubG9naW4pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlcjtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "user.route.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "user_controller",
        "post",
        "registration",
        "login",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAf;;AAEA,MAAMC,eAAe,GAAGH,OAAO,CAAC,+BAAD,CAA/B;;AAEAC,MAAM,CAACG,IAAP,CAAY,eAAZ,EAA6BD,eAAe,CAACE,YAA7C;AACAJ,MAAM,CAACG,IAAP,CAAY,QAAZ,EAAsBD,eAAe,CAACG,KAAtC;AAEAC,MAAM,CAACC,OAAP,GAAiBP,MAAjB",
      "sourceRoot": "/home/xtro/firebrigade/routes",
      "sourcesContent": [
        "const express = require(\"express\");\nconst router = express.Router();\n\nconst user_controller = require(\"../controller/user.controller\");\n\nrouter.post(\"/registration\", user_controller.registration);\nrouter.post(\"/login\", user_controller.login);\n\nmodule.exports = router;\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1552737383592
  },
  "{\"sourceRoot\":\"/home/xtro/firebrigade/controller\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/xtro/firebrigade\",\"filename\":\"/home/xtro/firebrigade/controller/user.controller.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/xtro/firebrigade\",\"plugins\":[],\"presets\":[]}:7.3.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/xtro/firebrigade/controller",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/xtro/firebrigade",
      "filename": "/home/xtro/firebrigade/controller/user.controller.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/xtro/firebrigade",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/xtro/firebrigade/controller/user.controller.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/xtro/firebrigade/controller/user.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/xtro/firebrigade/controller",
        "sourceFileName": "user.controller.js"
      }
    },
    "ast": null,
    "code": "const User = require(\"../model/user.model\");\n\nexports.registration = (req, res, next) => {\n  let newUser = new User({\n    name: req.body.name,\n    mnumber: req.body.number,\n    type: req.body.type,\n    password: req.body.password\n  });\n  newUser.save(err => {\n    if (err) {\n      return next(err);\n    }\n\n    res.json({\n      message: \"success\"\n    });\n  });\n};\n\nexports.login = (req, res, next) => {\n  const result = User.find({\n    mnumber: req.body.number\n  }).exec((err, result) => {\n    if (err) {\n      return res.json({\n        message: \"unscuccessful\"\n      });\n    } else if (result.length == 0) {\n      return res.json({\n        message: \"unsuccessful\"\n      });\n    } else if (result[0].password == req.body.password) {\n      res.json({\n        message: \"success\",\n        result: result\n      });\n    } else {\n      res.json({\n        message: \"unsuccessful\"\n      });\n    }\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIuY29udHJvbGxlci5qcyJdLCJuYW1lcyI6WyJVc2VyIiwicmVxdWlyZSIsImV4cG9ydHMiLCJyZWdpc3RyYXRpb24iLCJyZXEiLCJyZXMiLCJuZXh0IiwibmV3VXNlciIsIm5hbWUiLCJib2R5IiwibW51bWJlciIsIm51bWJlciIsInR5cGUiLCJwYXNzd29yZCIsInNhdmUiLCJlcnIiLCJqc29uIiwibWVzc2FnZSIsImxvZ2luIiwicmVzdWx0IiwiZmluZCIsImV4ZWMiLCJsZW5ndGgiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLElBQUksR0FBR0MsT0FBTyxDQUFDLHFCQUFELENBQXBCOztBQUVBQyxPQUFPLENBQUNDLFlBQVIsR0FBdUIsQ0FBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQVdDLElBQVgsS0FBb0I7QUFDekMsTUFBSUMsT0FBTyxHQUFHLElBQUlQLElBQUosQ0FBUztBQUNyQlEsSUFBQUEsSUFBSSxFQUFFSixHQUFHLENBQUNLLElBQUosQ0FBU0QsSUFETTtBQUVyQkUsSUFBQUEsT0FBTyxFQUFFTixHQUFHLENBQUNLLElBQUosQ0FBU0UsTUFGRztBQUdyQkMsSUFBQUEsSUFBSSxFQUFFUixHQUFHLENBQUNLLElBQUosQ0FBU0csSUFITTtBQUlyQkMsSUFBQUEsUUFBUSxFQUFFVCxHQUFHLENBQUNLLElBQUosQ0FBU0k7QUFKRSxHQUFULENBQWQ7QUFPQU4sRUFBQUEsT0FBTyxDQUFDTyxJQUFSLENBQWFDLEdBQUcsSUFBSTtBQUNsQixRQUFJQSxHQUFKLEVBQVM7QUFDUCxhQUFPVCxJQUFJLENBQUNTLEdBQUQsQ0FBWDtBQUNEOztBQUNEVixJQUFBQSxHQUFHLENBQUNXLElBQUosQ0FBUztBQUFFQyxNQUFBQSxPQUFPLEVBQUU7QUFBWCxLQUFUO0FBQ0QsR0FMRDtBQU1ELENBZEQ7O0FBZ0JBZixPQUFPLENBQUNnQixLQUFSLEdBQWdCLENBQUNkLEdBQUQsRUFBTUMsR0FBTixFQUFXQyxJQUFYLEtBQW9CO0FBQ2xDLFFBQU1hLE1BQU0sR0FBR25CLElBQUksQ0FBQ29CLElBQUwsQ0FBVTtBQUFFVixJQUFBQSxPQUFPLEVBQUVOLEdBQUcsQ0FBQ0ssSUFBSixDQUFTRTtBQUFwQixHQUFWLEVBQXdDVSxJQUF4QyxDQUE2QyxDQUFDTixHQUFELEVBQU1JLE1BQU4sS0FBaUI7QUFDM0UsUUFBSUosR0FBSixFQUFTO0FBQ1AsYUFBT1YsR0FBRyxDQUFDVyxJQUFKLENBQVM7QUFBRUMsUUFBQUEsT0FBTyxFQUFFO0FBQVgsT0FBVCxDQUFQO0FBQ0QsS0FGRCxNQUVPLElBQUlFLE1BQU0sQ0FBQ0csTUFBUCxJQUFpQixDQUFyQixFQUF3QjtBQUM3QixhQUFPakIsR0FBRyxDQUFDVyxJQUFKLENBQVM7QUFBRUMsUUFBQUEsT0FBTyxFQUFFO0FBQVgsT0FBVCxDQUFQO0FBQ0QsS0FGTSxNQUVBLElBQUlFLE1BQU0sQ0FBQyxDQUFELENBQU4sQ0FBVU4sUUFBVixJQUFzQlQsR0FBRyxDQUFDSyxJQUFKLENBQVNJLFFBQW5DLEVBQTZDO0FBQ2xEUixNQUFBQSxHQUFHLENBQUNXLElBQUosQ0FBUztBQUFFQyxRQUFBQSxPQUFPLEVBQUUsU0FBWDtBQUFzQkUsUUFBQUEsTUFBTSxFQUFFQTtBQUE5QixPQUFUO0FBQ0QsS0FGTSxNQUVBO0FBQ0xkLE1BQUFBLEdBQUcsQ0FBQ1csSUFBSixDQUFTO0FBQUVDLFFBQUFBLE9BQU8sRUFBRTtBQUFYLE9BQVQ7QUFDRDtBQUNGLEdBVmMsQ0FBZjtBQVdELENBWkQiLCJzb3VyY2VSb290IjoiL2hvbWUveHRyby9maXJlYnJpZ2FkZS9jb250cm9sbGVyIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgVXNlciA9IHJlcXVpcmUoXCIuLi9tb2RlbC91c2VyLm1vZGVsXCIpO1xuXG5leHBvcnRzLnJlZ2lzdHJhdGlvbiA9IChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICBsZXQgbmV3VXNlciA9IG5ldyBVc2VyKHtcbiAgICBuYW1lOiByZXEuYm9keS5uYW1lLFxuICAgIG1udW1iZXI6IHJlcS5ib2R5Lm51bWJlcixcbiAgICB0eXBlOiByZXEuYm9keS50eXBlLFxuICAgIHBhc3N3b3JkOiByZXEuYm9keS5wYXNzd29yZFxuICB9KTtcblxuICBuZXdVc2VyLnNhdmUoZXJyID0+IHtcbiAgICBpZiAoZXJyKSB7XG4gICAgICByZXR1cm4gbmV4dChlcnIpO1xuICAgIH1cbiAgICByZXMuanNvbih7IG1lc3NhZ2U6IFwic3VjY2Vzc1wiIH0pO1xuICB9KTtcbn07XG5cbmV4cG9ydHMubG9naW4gPSAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgY29uc3QgcmVzdWx0ID0gVXNlci5maW5kKHsgbW51bWJlcjogcmVxLmJvZHkubnVtYmVyIH0pLmV4ZWMoKGVyciwgcmVzdWx0KSA9PiB7XG4gICAgaWYgKGVycikge1xuICAgICAgcmV0dXJuIHJlcy5qc29uKHsgbWVzc2FnZTogXCJ1bnNjdWNjZXNzZnVsXCIgfSk7XG4gICAgfSBlbHNlIGlmIChyZXN1bHQubGVuZ3RoID09IDApIHtcbiAgICAgIHJldHVybiByZXMuanNvbih7IG1lc3NhZ2U6IFwidW5zdWNjZXNzZnVsXCIgfSk7XG4gICAgfSBlbHNlIGlmIChyZXN1bHRbMF0ucGFzc3dvcmQgPT0gcmVxLmJvZHkucGFzc3dvcmQpIHtcbiAgICAgIHJlcy5qc29uKHsgbWVzc2FnZTogXCJzdWNjZXNzXCIsIHJlc3VsdDogcmVzdWx0IH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXMuanNvbih7IG1lc3NhZ2U6IFwidW5zdWNjZXNzZnVsXCIgfSk7XG4gICAgfVxuICB9KTtcbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "user.controller.js"
      ],
      "names": [
        "User",
        "require",
        "exports",
        "registration",
        "req",
        "res",
        "next",
        "newUser",
        "name",
        "body",
        "mnumber",
        "number",
        "type",
        "password",
        "save",
        "err",
        "json",
        "message",
        "login",
        "result",
        "find",
        "exec",
        "length"
      ],
      "mappings": "AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,qBAAD,CAApB;;AAEAC,OAAO,CAACC,YAAR,GAAuB,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AACzC,MAAIC,OAAO,GAAG,IAAIP,IAAJ,CAAS;AACrBQ,IAAAA,IAAI,EAAEJ,GAAG,CAACK,IAAJ,CAASD,IADM;AAErBE,IAAAA,OAAO,EAAEN,GAAG,CAACK,IAAJ,CAASE,MAFG;AAGrBC,IAAAA,IAAI,EAAER,GAAG,CAACK,IAAJ,CAASG,IAHM;AAIrBC,IAAAA,QAAQ,EAAET,GAAG,CAACK,IAAJ,CAASI;AAJE,GAAT,CAAd;AAOAN,EAAAA,OAAO,CAACO,IAAR,CAAaC,GAAG,IAAI;AAClB,QAAIA,GAAJ,EAAS;AACP,aAAOT,IAAI,CAACS,GAAD,CAAX;AACD;;AACDV,IAAAA,GAAG,CAACW,IAAJ,CAAS;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAT;AACD,GALD;AAMD,CAdD;;AAgBAf,OAAO,CAACgB,KAAR,GAAgB,CAACd,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AAClC,QAAMa,MAAM,GAAGnB,IAAI,CAACoB,IAAL,CAAU;AAAEV,IAAAA,OAAO,EAAEN,GAAG,CAACK,IAAJ,CAASE;AAApB,GAAV,EAAwCU,IAAxC,CAA6C,CAACN,GAAD,EAAMI,MAAN,KAAiB;AAC3E,QAAIJ,GAAJ,EAAS;AACP,aAAOV,GAAG,CAACW,IAAJ,CAAS;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAT,CAAP;AACD,KAFD,MAEO,IAAIE,MAAM,CAACG,MAAP,IAAiB,CAArB,EAAwB;AAC7B,aAAOjB,GAAG,CAACW,IAAJ,CAAS;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAT,CAAP;AACD,KAFM,MAEA,IAAIE,MAAM,CAAC,CAAD,CAAN,CAAUN,QAAV,IAAsBT,GAAG,CAACK,IAAJ,CAASI,QAAnC,EAA6C;AAClDR,MAAAA,GAAG,CAACW,IAAJ,CAAS;AAAEC,QAAAA,OAAO,EAAE,SAAX;AAAsBE,QAAAA,MAAM,EAAEA;AAA9B,OAAT;AACD,KAFM,MAEA;AACLd,MAAAA,GAAG,CAACW,IAAJ,CAAS;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAT;AACD;AACF,GAVc,CAAf;AAWD,CAZD",
      "sourceRoot": "/home/xtro/firebrigade/controller",
      "sourcesContent": [
        "const User = require(\"../model/user.model\");\n\nexports.registration = (req, res, next) => {\n  let newUser = new User({\n    name: req.body.name,\n    mnumber: req.body.number,\n    type: req.body.type,\n    password: req.body.password\n  });\n\n  newUser.save(err => {\n    if (err) {\n      return next(err);\n    }\n    res.json({ message: \"success\" });\n  });\n};\n\nexports.login = (req, res, next) => {\n  const result = User.find({ mnumber: req.body.number }).exec((err, result) => {\n    if (err) {\n      return res.json({ message: \"unscuccessful\" });\n    } else if (result.length == 0) {\n      return res.json({ message: \"unsuccessful\" });\n    } else if (result[0].password == req.body.password) {\n      res.json({ message: \"success\", result: result });\n    } else {\n      res.json({ message: \"unsuccessful\" });\n    }\n  });\n};\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1552748423443
  },
  "{\"sourceRoot\":\"/home/xtro/firebrigade/model\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/xtro/firebrigade\",\"filename\":\"/home/xtro/firebrigade/model/user.model.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/xtro/firebrigade\",\"plugins\":[],\"presets\":[]}:7.3.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/xtro/firebrigade/model",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/xtro/firebrigade",
      "filename": "/home/xtro/firebrigade/model/user.model.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/xtro/firebrigade",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/xtro/firebrigade/model/user.model.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/xtro/firebrigade/model/user.model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/xtro/firebrigade/model",
        "sourceFileName": "user.model.js"
      }
    },
    "ast": null,
    "code": "const mongoose = require(\"mongoose\");\n\nconst UserSchema = mongoose.Schema({\n  name: String,\n  mnumber: String,\n  type: String,\n  password: String\n});\nconst User = mongoose.model(\"Register\", UserSchema);\nmodule.exports = User;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIubW9kZWwuanMiXSwibmFtZXMiOlsibW9uZ29vc2UiLCJyZXF1aXJlIiwiVXNlclNjaGVtYSIsIlNjaGVtYSIsIm5hbWUiLCJTdHJpbmciLCJtbnVtYmVyIiwidHlwZSIsInBhc3N3b3JkIiwiVXNlciIsIm1vZGVsIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsUUFBUSxHQUFHQyxPQUFPLENBQUMsVUFBRCxDQUF4Qjs7QUFFQSxNQUFNQyxVQUFVLEdBQUdGLFFBQVEsQ0FBQ0csTUFBVCxDQUFnQjtBQUNqQ0MsRUFBQUEsSUFBSSxFQUFFQyxNQUQyQjtBQUVqQ0MsRUFBQUEsT0FBTyxFQUFFRCxNQUZ3QjtBQUdqQ0UsRUFBQUEsSUFBSSxFQUFFRixNQUgyQjtBQUlqQ0csRUFBQUEsUUFBUSxFQUFFSDtBQUp1QixDQUFoQixDQUFuQjtBQU1BLE1BQU1JLElBQUksR0FBR1QsUUFBUSxDQUFDVSxLQUFULENBQWUsVUFBZixFQUEyQlIsVUFBM0IsQ0FBYjtBQUVBUyxNQUFNLENBQUNDLE9BQVAsR0FBaUJILElBQWpCIiwic291cmNlUm9vdCI6Ii9ob21lL3h0cm8vZmlyZWJyaWdhZGUvbW9kZWwiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBtb25nb29zZSA9IHJlcXVpcmUoXCJtb25nb29zZVwiKTtcblxuY29uc3QgVXNlclNjaGVtYSA9IG1vbmdvb3NlLlNjaGVtYSh7XG4gIG5hbWU6IFN0cmluZyxcbiAgbW51bWJlcjogU3RyaW5nLFxuICB0eXBlOiBTdHJpbmcsXG4gIHBhc3N3b3JkOiBTdHJpbmdcbn0pO1xuY29uc3QgVXNlciA9IG1vbmdvb3NlLm1vZGVsKFwiUmVnaXN0ZXJcIiwgVXNlclNjaGVtYSk7XG5cbm1vZHVsZS5leHBvcnRzID0gVXNlcjtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "user.model.js"
      ],
      "names": [
        "mongoose",
        "require",
        "UserSchema",
        "Schema",
        "name",
        "String",
        "mnumber",
        "type",
        "password",
        "User",
        "model",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AAEA,MAAMC,UAAU,GAAGF,QAAQ,CAACG,MAAT,CAAgB;AACjCC,EAAAA,IAAI,EAAEC,MAD2B;AAEjCC,EAAAA,OAAO,EAAED,MAFwB;AAGjCE,EAAAA,IAAI,EAAEF,MAH2B;AAIjCG,EAAAA,QAAQ,EAAEH;AAJuB,CAAhB,CAAnB;AAMA,MAAMI,IAAI,GAAGT,QAAQ,CAACU,KAAT,CAAe,UAAf,EAA2BR,UAA3B,CAAb;AAEAS,MAAM,CAACC,OAAP,GAAiBH,IAAjB",
      "sourceRoot": "/home/xtro/firebrigade/model",
      "sourcesContent": [
        "const mongoose = require(\"mongoose\");\n\nconst UserSchema = mongoose.Schema({\n  name: String,\n  mnumber: String,\n  type: String,\n  password: String\n});\nconst User = mongoose.model(\"Register\", UserSchema);\n\nmodule.exports = User;\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1552762367131
  },
  "{\"sourceRoot\":\"/home/xtro/firebrigade/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/xtro/firebrigade\",\"filename\":\"/home/xtro/firebrigade/routes/blog.route.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/xtro/firebrigade\",\"plugins\":[],\"presets\":[]}:7.3.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/xtro/firebrigade/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/xtro/firebrigade",
      "filename": "/home/xtro/firebrigade/routes/blog.route.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/xtro/firebrigade",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/xtro/firebrigade/routes/blog.route.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/xtro/firebrigade/routes/blog.route.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/xtro/firebrigade/routes",
        "sourceFileName": "blog.route.js"
      }
    },
    "ast": null,
    "code": "const express = require(\"express\");\n\nconst router = express.Router();\n\nconst blog_controller = require(\"../controller/blog.controller\");\n\nrouter.get(\"/viewer\", blog_controller.viewer);\nrouter.post(\"/sender\", blog_controller.sender);\nrouter.post(\"/deleter\", blog_controller.deleter);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJsb2cucm91dGUuanMiXSwibmFtZXMiOlsiZXhwcmVzcyIsInJlcXVpcmUiLCJyb3V0ZXIiLCJSb3V0ZXIiLCJibG9nX2NvbnRyb2xsZXIiLCJnZXQiLCJ2aWV3ZXIiLCJwb3N0Iiwic2VuZGVyIiwiZGVsZXRlciIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O0FBQ0EsTUFBTUMsTUFBTSxHQUFHRixPQUFPLENBQUNHLE1BQVIsRUFBZjs7QUFFQSxNQUFNQyxlQUFlLEdBQUdILE9BQU8sQ0FBQywrQkFBRCxDQUEvQjs7QUFFQUMsTUFBTSxDQUFDRyxHQUFQLENBQVcsU0FBWCxFQUFzQkQsZUFBZSxDQUFDRSxNQUF0QztBQUNBSixNQUFNLENBQUNLLElBQVAsQ0FBWSxTQUFaLEVBQXVCSCxlQUFlLENBQUNJLE1BQXZDO0FBQ0FOLE1BQU0sQ0FBQ0ssSUFBUCxDQUFZLFVBQVosRUFBd0JILGVBQWUsQ0FBQ0ssT0FBeEM7QUFFQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCVCxNQUFqQiIsInNvdXJjZVJvb3QiOiIvaG9tZS94dHJvL2ZpcmVicmlnYWRlL3JvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKFwiZXhwcmVzc1wiKTtcbmNvbnN0IHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XG5cbmNvbnN0IGJsb2dfY29udHJvbGxlciA9IHJlcXVpcmUoXCIuLi9jb250cm9sbGVyL2Jsb2cuY29udHJvbGxlclwiKTtcblxucm91dGVyLmdldChcIi92aWV3ZXJcIiwgYmxvZ19jb250cm9sbGVyLnZpZXdlcik7XG5yb3V0ZXIucG9zdChcIi9zZW5kZXJcIiwgYmxvZ19jb250cm9sbGVyLnNlbmRlcik7XG5yb3V0ZXIucG9zdChcIi9kZWxldGVyXCIsIGJsb2dfY29udHJvbGxlci5kZWxldGVyKTtcblxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXI7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "blog.route.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "blog_controller",
        "get",
        "viewer",
        "post",
        "sender",
        "deleter",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAf;;AAEA,MAAMC,eAAe,GAAGH,OAAO,CAAC,+BAAD,CAA/B;;AAEAC,MAAM,CAACG,GAAP,CAAW,SAAX,EAAsBD,eAAe,CAACE,MAAtC;AACAJ,MAAM,CAACK,IAAP,CAAY,SAAZ,EAAuBH,eAAe,CAACI,MAAvC;AACAN,MAAM,CAACK,IAAP,CAAY,UAAZ,EAAwBH,eAAe,CAACK,OAAxC;AAEAC,MAAM,CAACC,OAAP,GAAiBT,MAAjB",
      "sourceRoot": "/home/xtro/firebrigade/routes",
      "sourcesContent": [
        "const express = require(\"express\");\nconst router = express.Router();\n\nconst blog_controller = require(\"../controller/blog.controller\");\n\nrouter.get(\"/viewer\", blog_controller.viewer);\nrouter.post(\"/sender\", blog_controller.sender);\nrouter.post(\"/deleter\", blog_controller.deleter);\n\nmodule.exports = router;\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1552772373622
  },
  "{\"sourceRoot\":\"/home/xtro/firebrigade/controller\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/xtro/firebrigade\",\"filename\":\"/home/xtro/firebrigade/controller/blog.controller.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/xtro/firebrigade\",\"plugins\":[],\"presets\":[]}:7.3.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/xtro/firebrigade/controller",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/xtro/firebrigade",
      "filename": "/home/xtro/firebrigade/controller/blog.controller.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/xtro/firebrigade",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/xtro/firebrigade/controller/blog.controller.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/xtro/firebrigade/controller/blog.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/xtro/firebrigade/controller",
        "sourceFileName": "blog.controller.js"
      }
    },
    "ast": null,
    "code": "const Blog = require(\"../model/blog.model\");\n\nexports.viewer = (req, res, next) => {\n  const result = Blog.find().select({\n    question: 1,\n    answer: 1\n  }).exec((err, result) => {\n    if (err) {\n      return next(err);\n    } else {\n      res.send(result);\n    }\n  });\n};\n\nexports.sender = (req, res, next) => {\n  let newBlog = new Blog({\n    question: req.body.question,\n    answer: req.body.answer\n  });\n  newBlog.save(err => {\n    if (err) {\n      return next(err);\n    }\n\n    res.json({\n      message: \"success\"\n    });\n  });\n};\n\nexports.deleter = (req, res, next) => {\n  Blog.deleteOne({\n    _id: res.body.id\n  }, err => {\n    if (err) {\n      return next(err);\n    }\n\n    res.json({\n      message: \"success\"\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJsb2cuY29udHJvbGxlci5qcyJdLCJuYW1lcyI6WyJCbG9nIiwicmVxdWlyZSIsImV4cG9ydHMiLCJ2aWV3ZXIiLCJyZXEiLCJyZXMiLCJuZXh0IiwicmVzdWx0IiwiZmluZCIsInNlbGVjdCIsInF1ZXN0aW9uIiwiYW5zd2VyIiwiZXhlYyIsImVyciIsInNlbmQiLCJzZW5kZXIiLCJuZXdCbG9nIiwiYm9keSIsInNhdmUiLCJqc29uIiwibWVzc2FnZSIsImRlbGV0ZXIiLCJkZWxldGVPbmUiLCJfaWQiLCJpZCJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsSUFBSSxHQUFHQyxPQUFPLENBQUMscUJBQUQsQ0FBcEI7O0FBRUFDLE9BQU8sQ0FBQ0MsTUFBUixHQUFpQixDQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxLQUFvQjtBQUNuQyxRQUFNQyxNQUFNLEdBQUdQLElBQUksQ0FBQ1EsSUFBTCxHQUNaQyxNQURZLENBQ0w7QUFBRUMsSUFBQUEsUUFBUSxFQUFFLENBQVo7QUFBZUMsSUFBQUEsTUFBTSxFQUFFO0FBQXZCLEdBREssRUFFWkMsSUFGWSxDQUVQLENBQUNDLEdBQUQsRUFBTU4sTUFBTixLQUFpQjtBQUNyQixRQUFJTSxHQUFKLEVBQVM7QUFDUCxhQUFPUCxJQUFJLENBQUNPLEdBQUQsQ0FBWDtBQUNELEtBRkQsTUFFTztBQUNMUixNQUFBQSxHQUFHLENBQUNTLElBQUosQ0FBU1AsTUFBVDtBQUNEO0FBQ0YsR0FSWSxDQUFmO0FBU0QsQ0FWRDs7QUFZQUwsT0FBTyxDQUFDYSxNQUFSLEdBQWlCLENBQUNYLEdBQUQsRUFBTUMsR0FBTixFQUFXQyxJQUFYLEtBQW9CO0FBQ25DLE1BQUlVLE9BQU8sR0FBRyxJQUFJaEIsSUFBSixDQUFTO0FBQ3JCVSxJQUFBQSxRQUFRLEVBQUVOLEdBQUcsQ0FBQ2EsSUFBSixDQUFTUCxRQURFO0FBRXJCQyxJQUFBQSxNQUFNLEVBQUVQLEdBQUcsQ0FBQ2EsSUFBSixDQUFTTjtBQUZJLEdBQVQsQ0FBZDtBQUtBSyxFQUFBQSxPQUFPLENBQUNFLElBQVIsQ0FBYUwsR0FBRyxJQUFJO0FBQ2xCLFFBQUlBLEdBQUosRUFBUztBQUNQLGFBQU9QLElBQUksQ0FBQ08sR0FBRCxDQUFYO0FBQ0Q7O0FBQ0RSLElBQUFBLEdBQUcsQ0FBQ2MsSUFBSixDQUFTO0FBQUVDLE1BQUFBLE9BQU8sRUFBRTtBQUFYLEtBQVQ7QUFDRCxHQUxEO0FBTUQsQ0FaRDs7QUFjQWxCLE9BQU8sQ0FBQ21CLE9BQVIsR0FBa0IsQ0FBQ2pCLEdBQUQsRUFBTUMsR0FBTixFQUFXQyxJQUFYLEtBQW9CO0FBQ3BDTixFQUFBQSxJQUFJLENBQUNzQixTQUFMLENBQWU7QUFBRUMsSUFBQUEsR0FBRyxFQUFFbEIsR0FBRyxDQUFDWSxJQUFKLENBQVNPO0FBQWhCLEdBQWYsRUFBcUNYLEdBQUcsSUFBSTtBQUMxQyxRQUFJQSxHQUFKLEVBQVM7QUFDUCxhQUFPUCxJQUFJLENBQUNPLEdBQUQsQ0FBWDtBQUNEOztBQUNEUixJQUFBQSxHQUFHLENBQUNjLElBQUosQ0FBUztBQUFFQyxNQUFBQSxPQUFPLEVBQUU7QUFBWCxLQUFUO0FBQ0QsR0FMRDtBQU1ELENBUEQiLCJzb3VyY2VSb290IjoiL2hvbWUveHRyby9maXJlYnJpZ2FkZS9jb250cm9sbGVyIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgQmxvZyA9IHJlcXVpcmUoXCIuLi9tb2RlbC9ibG9nLm1vZGVsXCIpO1xuXG5leHBvcnRzLnZpZXdlciA9IChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICBjb25zdCByZXN1bHQgPSBCbG9nLmZpbmQoKVxuICAgIC5zZWxlY3QoeyBxdWVzdGlvbjogMSwgYW5zd2VyOiAxIH0pXG4gICAgLmV4ZWMoKGVyciwgcmVzdWx0KSA9PiB7XG4gICAgICBpZiAoZXJyKSB7XG4gICAgICAgIHJldHVybiBuZXh0KGVycik7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXMuc2VuZChyZXN1bHQpO1xuICAgICAgfVxuICAgIH0pO1xufTtcblxuZXhwb3J0cy5zZW5kZXIgPSAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgbGV0IG5ld0Jsb2cgPSBuZXcgQmxvZyh7XG4gICAgcXVlc3Rpb246IHJlcS5ib2R5LnF1ZXN0aW9uLFxuICAgIGFuc3dlcjogcmVxLmJvZHkuYW5zd2VyXG4gIH0pO1xuXG4gIG5ld0Jsb2cuc2F2ZShlcnIgPT4ge1xuICAgIGlmIChlcnIpIHtcbiAgICAgIHJldHVybiBuZXh0KGVycik7XG4gICAgfVxuICAgIHJlcy5qc29uKHsgbWVzc2FnZTogXCJzdWNjZXNzXCIgfSk7XG4gIH0pO1xufTtcblxuZXhwb3J0cy5kZWxldGVyID0gKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gIEJsb2cuZGVsZXRlT25lKHsgX2lkOiByZXMuYm9keS5pZCB9LCBlcnIgPT4ge1xuICAgIGlmIChlcnIpIHtcbiAgICAgIHJldHVybiBuZXh0KGVycik7XG4gICAgfVxuICAgIHJlcy5qc29uKHsgbWVzc2FnZTogXCJzdWNjZXNzXCIgfSk7XG4gIH0pO1xufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "blog.controller.js"
      ],
      "names": [
        "Blog",
        "require",
        "exports",
        "viewer",
        "req",
        "res",
        "next",
        "result",
        "find",
        "select",
        "question",
        "answer",
        "exec",
        "err",
        "send",
        "sender",
        "newBlog",
        "body",
        "save",
        "json",
        "message",
        "deleter",
        "deleteOne",
        "_id",
        "id"
      ],
      "mappings": "AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,qBAAD,CAApB;;AAEAC,OAAO,CAACC,MAAR,GAAiB,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AACnC,QAAMC,MAAM,GAAGP,IAAI,CAACQ,IAAL,GACZC,MADY,CACL;AAAEC,IAAAA,QAAQ,EAAE,CAAZ;AAAeC,IAAAA,MAAM,EAAE;AAAvB,GADK,EAEZC,IAFY,CAEP,CAACC,GAAD,EAAMN,MAAN,KAAiB;AACrB,QAAIM,GAAJ,EAAS;AACP,aAAOP,IAAI,CAACO,GAAD,CAAX;AACD,KAFD,MAEO;AACLR,MAAAA,GAAG,CAACS,IAAJ,CAASP,MAAT;AACD;AACF,GARY,CAAf;AASD,CAVD;;AAYAL,OAAO,CAACa,MAAR,GAAiB,CAACX,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AACnC,MAAIU,OAAO,GAAG,IAAIhB,IAAJ,CAAS;AACrBU,IAAAA,QAAQ,EAAEN,GAAG,CAACa,IAAJ,CAASP,QADE;AAErBC,IAAAA,MAAM,EAAEP,GAAG,CAACa,IAAJ,CAASN;AAFI,GAAT,CAAd;AAKAK,EAAAA,OAAO,CAACE,IAAR,CAAaL,GAAG,IAAI;AAClB,QAAIA,GAAJ,EAAS;AACP,aAAOP,IAAI,CAACO,GAAD,CAAX;AACD;;AACDR,IAAAA,GAAG,CAACc,IAAJ,CAAS;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAT;AACD,GALD;AAMD,CAZD;;AAcAlB,OAAO,CAACmB,OAAR,GAAkB,CAACjB,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AACpCN,EAAAA,IAAI,CAACsB,SAAL,CAAe;AAAEC,IAAAA,GAAG,EAAElB,GAAG,CAACY,IAAJ,CAASO;AAAhB,GAAf,EAAqCX,GAAG,IAAI;AAC1C,QAAIA,GAAJ,EAAS;AACP,aAAOP,IAAI,CAACO,GAAD,CAAX;AACD;;AACDR,IAAAA,GAAG,CAACc,IAAJ,CAAS;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAT;AACD,GALD;AAMD,CAPD",
      "sourceRoot": "/home/xtro/firebrigade/controller",
      "sourcesContent": [
        "const Blog = require(\"../model/blog.model\");\n\nexports.viewer = (req, res, next) => {\n  const result = Blog.find()\n    .select({ question: 1, answer: 1 })\n    .exec((err, result) => {\n      if (err) {\n        return next(err);\n      } else {\n        res.send(result);\n      }\n    });\n};\n\nexports.sender = (req, res, next) => {\n  let newBlog = new Blog({\n    question: req.body.question,\n    answer: req.body.answer\n  });\n\n  newBlog.save(err => {\n    if (err) {\n      return next(err);\n    }\n    res.json({ message: \"success\" });\n  });\n};\n\nexports.deleter = (req, res, next) => {\n  Blog.deleteOne({ _id: res.body.id }, err => {\n    if (err) {\n      return next(err);\n    }\n    res.json({ message: \"success\" });\n  });\n};\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1552772833247
  },
  "{\"sourceRoot\":\"/home/xtro/firebrigade/model\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/xtro/firebrigade\",\"filename\":\"/home/xtro/firebrigade/model/blog.model.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/xtro/firebrigade\",\"plugins\":[],\"presets\":[]}:7.3.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/xtro/firebrigade/model",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/xtro/firebrigade",
      "filename": "/home/xtro/firebrigade/model/blog.model.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/xtro/firebrigade",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/xtro/firebrigade/model/blog.model.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/xtro/firebrigade/model/blog.model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/xtro/firebrigade/model",
        "sourceFileName": "blog.model.js"
      }
    },
    "ast": null,
    "code": "const mongoose = require(\"mongoose\");\n\nconst BlogSchema = mongoose.Schema({\n  question: {\n    type: String,\n    required: true\n  },\n  answer: {\n    type: String,\n    required: true\n  }\n});\nconst Blog = mongoose.model(\"Blog\", BlogSchema);\nmodule.exports = Blog;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJsb2cubW9kZWwuanMiXSwibmFtZXMiOlsibW9uZ29vc2UiLCJyZXF1aXJlIiwiQmxvZ1NjaGVtYSIsIlNjaGVtYSIsInF1ZXN0aW9uIiwidHlwZSIsIlN0cmluZyIsInJlcXVpcmVkIiwiYW5zd2VyIiwiQmxvZyIsIm1vZGVsIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsUUFBUSxHQUFHQyxPQUFPLENBQUMsVUFBRCxDQUF4Qjs7QUFFQSxNQUFNQyxVQUFVLEdBQUdGLFFBQVEsQ0FBQ0csTUFBVCxDQUFnQjtBQUNqQ0MsRUFBQUEsUUFBUSxFQUFFO0FBQUVDLElBQUFBLElBQUksRUFBRUMsTUFBUjtBQUFnQkMsSUFBQUEsUUFBUSxFQUFFO0FBQTFCLEdBRHVCO0FBRWpDQyxFQUFBQSxNQUFNLEVBQUU7QUFBRUgsSUFBQUEsSUFBSSxFQUFFQyxNQUFSO0FBQWdCQyxJQUFBQSxRQUFRLEVBQUU7QUFBMUI7QUFGeUIsQ0FBaEIsQ0FBbkI7QUFJQSxNQUFNRSxJQUFJLEdBQUdULFFBQVEsQ0FBQ1UsS0FBVCxDQUFlLE1BQWYsRUFBdUJSLFVBQXZCLENBQWI7QUFFQVMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCSCxJQUFqQiIsInNvdXJjZVJvb3QiOiIvaG9tZS94dHJvL2ZpcmVicmlnYWRlL21vZGVsIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgbW9uZ29vc2UgPSByZXF1aXJlKFwibW9uZ29vc2VcIik7XG5cbmNvbnN0IEJsb2dTY2hlbWEgPSBtb25nb29zZS5TY2hlbWEoe1xuICBxdWVzdGlvbjogeyB0eXBlOiBTdHJpbmcsIHJlcXVpcmVkOiB0cnVlIH0sXG4gIGFuc3dlcjogeyB0eXBlOiBTdHJpbmcsIHJlcXVpcmVkOiB0cnVlIH1cbn0pO1xuY29uc3QgQmxvZyA9IG1vbmdvb3NlLm1vZGVsKFwiQmxvZ1wiLCBCbG9nU2NoZW1hKTtcblxubW9kdWxlLmV4cG9ydHMgPSBCbG9nO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "blog.model.js"
      ],
      "names": [
        "mongoose",
        "require",
        "BlogSchema",
        "Schema",
        "question",
        "type",
        "String",
        "required",
        "answer",
        "Blog",
        "model",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AAEA,MAAMC,UAAU,GAAGF,QAAQ,CAACG,MAAT,CAAgB;AACjCC,EAAAA,QAAQ,EAAE;AAAEC,IAAAA,IAAI,EAAEC,MAAR;AAAgBC,IAAAA,QAAQ,EAAE;AAA1B,GADuB;AAEjCC,EAAAA,MAAM,EAAE;AAAEH,IAAAA,IAAI,EAAEC,MAAR;AAAgBC,IAAAA,QAAQ,EAAE;AAA1B;AAFyB,CAAhB,CAAnB;AAIA,MAAME,IAAI,GAAGT,QAAQ,CAACU,KAAT,CAAe,MAAf,EAAuBR,UAAvB,CAAb;AAEAS,MAAM,CAACC,OAAP,GAAiBH,IAAjB",
      "sourceRoot": "/home/xtro/firebrigade/model",
      "sourcesContent": [
        "const mongoose = require(\"mongoose\");\n\nconst BlogSchema = mongoose.Schema({\n  question: { type: String, required: true },\n  answer: { type: String, required: true }\n});\nconst Blog = mongoose.model(\"Blog\", BlogSchema);\n\nmodule.exports = Blog;\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1552767208337
  },
  "{\"sourceRoot\":\"/home/xtro/firebrigade/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/xtro/firebrigade\",\"filename\":\"/home/xtro/firebrigade/routes/event.route.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/xtro/firebrigade\",\"plugins\":[],\"presets\":[]}:7.3.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/xtro/firebrigade/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/xtro/firebrigade",
      "filename": "/home/xtro/firebrigade/routes/event.route.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/xtro/firebrigade",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/xtro/firebrigade/routes/event.route.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/xtro/firebrigade/routes/event.route.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/xtro/firebrigade/routes",
        "sourceFileName": "event.route.js"
      }
    },
    "ast": null,
    "code": "const express = require(\"express\");\n\nconst router = express.Router();\n\nconst event_controller = require(\"../controller/event.controller\");\n\nrouter.post(\"/alert\", event_controller.alert);\nrouter.post(\"/respond\", event_controller.respond);\nrouter.get(\"/getall\", event_controller.getall);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImV2ZW50LnJvdXRlLmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwicm91dGVyIiwiUm91dGVyIiwiZXZlbnRfY29udHJvbGxlciIsInBvc3QiLCJhbGVydCIsInJlc3BvbmQiLCJnZXQiLCJnZXRhbGwiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXZCOztBQUNBLE1BQU1DLE1BQU0sR0FBR0YsT0FBTyxDQUFDRyxNQUFSLEVBQWY7O0FBRUEsTUFBTUMsZ0JBQWdCLEdBQUdILE9BQU8sQ0FBQyxnQ0FBRCxDQUFoQzs7QUFFQUMsTUFBTSxDQUFDRyxJQUFQLENBQVksUUFBWixFQUFzQkQsZ0JBQWdCLENBQUNFLEtBQXZDO0FBQ0FKLE1BQU0sQ0FBQ0csSUFBUCxDQUFZLFVBQVosRUFBd0JELGdCQUFnQixDQUFDRyxPQUF6QztBQUNBTCxNQUFNLENBQUNNLEdBQVAsQ0FBVyxTQUFYLEVBQXNCSixnQkFBZ0IsQ0FBQ0ssTUFBdkM7QUFFQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCVCxNQUFqQiIsInNvdXJjZVJvb3QiOiIvaG9tZS94dHJvL2ZpcmVicmlnYWRlL3JvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKFwiZXhwcmVzc1wiKTtcbmNvbnN0IHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XG5cbmNvbnN0IGV2ZW50X2NvbnRyb2xsZXIgPSByZXF1aXJlKFwiLi4vY29udHJvbGxlci9ldmVudC5jb250cm9sbGVyXCIpO1xuXG5yb3V0ZXIucG9zdChcIi9hbGVydFwiLCBldmVudF9jb250cm9sbGVyLmFsZXJ0KTtcbnJvdXRlci5wb3N0KFwiL3Jlc3BvbmRcIiwgZXZlbnRfY29udHJvbGxlci5yZXNwb25kKTtcbnJvdXRlci5nZXQoXCIvZ2V0YWxsXCIsIGV2ZW50X2NvbnRyb2xsZXIuZ2V0YWxsKTtcblxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXI7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "event.route.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "event_controller",
        "post",
        "alert",
        "respond",
        "get",
        "getall",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAf;;AAEA,MAAMC,gBAAgB,GAAGH,OAAO,CAAC,gCAAD,CAAhC;;AAEAC,MAAM,CAACG,IAAP,CAAY,QAAZ,EAAsBD,gBAAgB,CAACE,KAAvC;AACAJ,MAAM,CAACG,IAAP,CAAY,UAAZ,EAAwBD,gBAAgB,CAACG,OAAzC;AACAL,MAAM,CAACM,GAAP,CAAW,SAAX,EAAsBJ,gBAAgB,CAACK,MAAvC;AAEAC,MAAM,CAACC,OAAP,GAAiBT,MAAjB",
      "sourceRoot": "/home/xtro/firebrigade/routes",
      "sourcesContent": [
        "const express = require(\"express\");\nconst router = express.Router();\n\nconst event_controller = require(\"../controller/event.controller\");\n\nrouter.post(\"/alert\", event_controller.alert);\nrouter.post(\"/respond\", event_controller.respond);\nrouter.get(\"/getall\", event_controller.getall);\n\nmodule.exports = router;\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1552762338825
  },
  "{\"sourceRoot\":\"/home/xtro/firebrigade/controller\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/xtro/firebrigade\",\"filename\":\"/home/xtro/firebrigade/controller/event.controller.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/xtro/firebrigade\",\"plugins\":[],\"presets\":[]}:7.3.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/xtro/firebrigade/controller",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/xtro/firebrigade",
      "filename": "/home/xtro/firebrigade/controller/event.controller.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/xtro/firebrigade",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/xtro/firebrigade/controller/event.controller.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/xtro/firebrigade/controller/event.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/xtro/firebrigade/controller",
        "sourceFileName": "event.controller.js"
      }
    },
    "ast": null,
    "code": "const Event = require(\"../model/event.model\");\n\nfunction arePointsNear(checkPoint, centerPoint, km) {\n  var ky = 40000 / 360;\n  var kx = Math.cos(Math.PI * centerPoint.lat / 180.0) * ky;\n  var dx = Math.abs(centerPoint.long - checkPoint.long) * kx;\n  var dy = Math.abs(centerPoint.lat - checkPoint.lat) * ky;\n  return Math.sqrt(dx * dx + dy * dy) <= km;\n}\n\nexports.alert = async (req, res, next) => {\n  const result = await Event.find({\n    isDelete: false\n  }).select({\n    lat: 1,\n    long: 1,\n    count: 1\n  });\n\n  for (var i = 0; i < result.length; i++) {\n    var n = arePointsNear(result[i], {\n      long: req.body.long,\n      lat: req.body.lat\n    }, 1);\n\n    if (n) {\n      result[i].count = result[i].count + 1;\n      result[i].save(err => {\n        if (err) {\n          return next(err);\n        }\n\n        return res.json({\n          message: \"success\"\n        });\n      });\n    }\n  }\n\n  if (n != true) {\n    let newEvent = new Event({\n      long: req.body.long,\n      lat: req.body.lat,\n      count: 1,\n      isDelete: false\n    });\n    console.log(\"IN\");\n    newEvent.save(err => {\n      if (err) {\n        return next(err);\n      }\n\n      res.json({\n        message: \"success\"\n      });\n    });\n  }\n};\n\nexports.getall = (req, res, next) => {\n  const result = Event.find({\n    isDelete: false\n  }).exec((err, result) => {\n    if (err) {\n      return next(err);\n    }\n\n    res.json({\n      result: result\n    });\n  });\n};\n\nexports.respond = async (res, req, next) => {\n  const result = await Event.find({\n    lat: req.body.lat,\n    long: req.body.lat\n  });\n  result[0].isDelete = True;\n  result[0].save(err => {\n    if (err) {\n      return next(err);\n    }\n\n    res.json({\n      message: \"success\"\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImV2ZW50LmNvbnRyb2xsZXIuanMiXSwibmFtZXMiOlsiRXZlbnQiLCJyZXF1aXJlIiwiYXJlUG9pbnRzTmVhciIsImNoZWNrUG9pbnQiLCJjZW50ZXJQb2ludCIsImttIiwia3kiLCJreCIsIk1hdGgiLCJjb3MiLCJQSSIsImxhdCIsImR4IiwiYWJzIiwibG9uZyIsImR5Iiwic3FydCIsImV4cG9ydHMiLCJhbGVydCIsInJlcSIsInJlcyIsIm5leHQiLCJyZXN1bHQiLCJmaW5kIiwiaXNEZWxldGUiLCJzZWxlY3QiLCJjb3VudCIsImkiLCJsZW5ndGgiLCJuIiwiYm9keSIsInNhdmUiLCJlcnIiLCJqc29uIiwibWVzc2FnZSIsIm5ld0V2ZW50IiwiY29uc29sZSIsImxvZyIsImdldGFsbCIsImV4ZWMiLCJyZXNwb25kIiwiVHJ1ZSJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsS0FBSyxHQUFHQyxPQUFPLENBQUMsc0JBQUQsQ0FBckI7O0FBRUEsU0FBU0MsYUFBVCxDQUF1QkMsVUFBdkIsRUFBbUNDLFdBQW5DLEVBQWdEQyxFQUFoRCxFQUFvRDtBQUNsRCxNQUFJQyxFQUFFLEdBQUcsUUFBUSxHQUFqQjtBQUNBLE1BQUlDLEVBQUUsR0FBR0MsSUFBSSxDQUFDQyxHQUFMLENBQVVELElBQUksQ0FBQ0UsRUFBTCxHQUFVTixXQUFXLENBQUNPLEdBQXZCLEdBQThCLEtBQXZDLElBQWdETCxFQUF6RDtBQUNBLE1BQUlNLEVBQUUsR0FBR0osSUFBSSxDQUFDSyxHQUFMLENBQVNULFdBQVcsQ0FBQ1UsSUFBWixHQUFtQlgsVUFBVSxDQUFDVyxJQUF2QyxJQUErQ1AsRUFBeEQ7QUFDQSxNQUFJUSxFQUFFLEdBQUdQLElBQUksQ0FBQ0ssR0FBTCxDQUFTVCxXQUFXLENBQUNPLEdBQVosR0FBa0JSLFVBQVUsQ0FBQ1EsR0FBdEMsSUFBNkNMLEVBQXREO0FBQ0EsU0FBT0UsSUFBSSxDQUFDUSxJQUFMLENBQVVKLEVBQUUsR0FBR0EsRUFBTCxHQUFVRyxFQUFFLEdBQUdBLEVBQXpCLEtBQWdDVixFQUF2QztBQUNEOztBQUVEWSxPQUFPLENBQUNDLEtBQVIsR0FBZ0IsT0FBT0MsR0FBUCxFQUFZQyxHQUFaLEVBQWlCQyxJQUFqQixLQUEwQjtBQUN4QyxRQUFNQyxNQUFNLEdBQUcsTUFBTXRCLEtBQUssQ0FBQ3VCLElBQU4sQ0FBVztBQUFFQyxJQUFBQSxRQUFRLEVBQUU7QUFBWixHQUFYLEVBQWdDQyxNQUFoQyxDQUF1QztBQUMxRGQsSUFBQUEsR0FBRyxFQUFFLENBRHFEO0FBRTFERyxJQUFBQSxJQUFJLEVBQUUsQ0FGb0Q7QUFHMURZLElBQUFBLEtBQUssRUFBRTtBQUhtRCxHQUF2QyxDQUFyQjs7QUFLQSxPQUFLLElBQUlDLENBQUMsR0FBRyxDQUFiLEVBQWdCQSxDQUFDLEdBQUdMLE1BQU0sQ0FBQ00sTUFBM0IsRUFBbUNELENBQUMsRUFBcEMsRUFBd0M7QUFDdEMsUUFBSUUsQ0FBQyxHQUFHM0IsYUFBYSxDQUNuQm9CLE1BQU0sQ0FBQ0ssQ0FBRCxDQURhLEVBRW5CO0FBQUViLE1BQUFBLElBQUksRUFBRUssR0FBRyxDQUFDVyxJQUFKLENBQVNoQixJQUFqQjtBQUF1QkgsTUFBQUEsR0FBRyxFQUFFUSxHQUFHLENBQUNXLElBQUosQ0FBU25CO0FBQXJDLEtBRm1CLEVBR25CLENBSG1CLENBQXJCOztBQUtBLFFBQUlrQixDQUFKLEVBQU87QUFDTFAsTUFBQUEsTUFBTSxDQUFDSyxDQUFELENBQU4sQ0FBVUQsS0FBVixHQUFrQkosTUFBTSxDQUFDSyxDQUFELENBQU4sQ0FBVUQsS0FBVixHQUFrQixDQUFwQztBQUNBSixNQUFBQSxNQUFNLENBQUNLLENBQUQsQ0FBTixDQUFVSSxJQUFWLENBQWVDLEdBQUcsSUFBSTtBQUNwQixZQUFJQSxHQUFKLEVBQVM7QUFDUCxpQkFBT1gsSUFBSSxDQUFDVyxHQUFELENBQVg7QUFDRDs7QUFDRCxlQUFPWixHQUFHLENBQUNhLElBQUosQ0FBUztBQUFFQyxVQUFBQSxPQUFPLEVBQUU7QUFBWCxTQUFULENBQVA7QUFDRCxPQUxEO0FBTUQ7QUFDRjs7QUFDRCxNQUFJTCxDQUFDLElBQUksSUFBVCxFQUFlO0FBQ2IsUUFBSU0sUUFBUSxHQUFHLElBQUluQyxLQUFKLENBQVU7QUFDdkJjLE1BQUFBLElBQUksRUFBRUssR0FBRyxDQUFDVyxJQUFKLENBQVNoQixJQURRO0FBRXZCSCxNQUFBQSxHQUFHLEVBQUVRLEdBQUcsQ0FBQ1csSUFBSixDQUFTbkIsR0FGUztBQUd2QmUsTUFBQUEsS0FBSyxFQUFFLENBSGdCO0FBSXZCRixNQUFBQSxRQUFRLEVBQUU7QUFKYSxLQUFWLENBQWY7QUFNQVksSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksSUFBWjtBQUNBRixJQUFBQSxRQUFRLENBQUNKLElBQVQsQ0FBY0MsR0FBRyxJQUFJO0FBQ25CLFVBQUlBLEdBQUosRUFBUztBQUNQLGVBQU9YLElBQUksQ0FBQ1csR0FBRCxDQUFYO0FBQ0Q7O0FBQ0RaLE1BQUFBLEdBQUcsQ0FBQ2EsSUFBSixDQUFTO0FBQUVDLFFBQUFBLE9BQU8sRUFBRTtBQUFYLE9BQVQ7QUFDRCxLQUxEO0FBTUQ7QUFDRixDQXJDRDs7QUF1Q0FqQixPQUFPLENBQUNxQixNQUFSLEdBQWlCLENBQUNuQixHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxLQUFvQjtBQUNuQyxRQUFNQyxNQUFNLEdBQUd0QixLQUFLLENBQUN1QixJQUFOLENBQVc7QUFBRUMsSUFBQUEsUUFBUSxFQUFFO0FBQVosR0FBWCxFQUFnQ2UsSUFBaEMsQ0FBcUMsQ0FBQ1AsR0FBRCxFQUFNVixNQUFOLEtBQWlCO0FBQ25FLFFBQUlVLEdBQUosRUFBUztBQUNQLGFBQU9YLElBQUksQ0FBQ1csR0FBRCxDQUFYO0FBQ0Q7O0FBQ0RaLElBQUFBLEdBQUcsQ0FBQ2EsSUFBSixDQUFTO0FBQUVYLE1BQUFBLE1BQU0sRUFBRUE7QUFBVixLQUFUO0FBQ0QsR0FMYyxDQUFmO0FBTUQsQ0FQRDs7QUFTQUwsT0FBTyxDQUFDdUIsT0FBUixHQUFrQixPQUFPcEIsR0FBUCxFQUFZRCxHQUFaLEVBQWlCRSxJQUFqQixLQUEwQjtBQUMxQyxRQUFNQyxNQUFNLEdBQUcsTUFBTXRCLEtBQUssQ0FBQ3VCLElBQU4sQ0FBVztBQUFFWixJQUFBQSxHQUFHLEVBQUVRLEdBQUcsQ0FBQ1csSUFBSixDQUFTbkIsR0FBaEI7QUFBcUJHLElBQUFBLElBQUksRUFBRUssR0FBRyxDQUFDVyxJQUFKLENBQVNuQjtBQUFwQyxHQUFYLENBQXJCO0FBQ0FXLEVBQUFBLE1BQU0sQ0FBQyxDQUFELENBQU4sQ0FBVUUsUUFBVixHQUFxQmlCLElBQXJCO0FBQ0FuQixFQUFBQSxNQUFNLENBQUMsQ0FBRCxDQUFOLENBQVVTLElBQVYsQ0FBZUMsR0FBRyxJQUFJO0FBQ3BCLFFBQUlBLEdBQUosRUFBUztBQUNQLGFBQU9YLElBQUksQ0FBQ1csR0FBRCxDQUFYO0FBQ0Q7O0FBQ0RaLElBQUFBLEdBQUcsQ0FBQ2EsSUFBSixDQUFTO0FBQUVDLE1BQUFBLE9BQU8sRUFBRTtBQUFYLEtBQVQ7QUFDRCxHQUxEO0FBTUQsQ0FURCIsInNvdXJjZVJvb3QiOiIvaG9tZS94dHJvL2ZpcmVicmlnYWRlL2NvbnRyb2xsZXIiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBFdmVudCA9IHJlcXVpcmUoXCIuLi9tb2RlbC9ldmVudC5tb2RlbFwiKTtcblxuZnVuY3Rpb24gYXJlUG9pbnRzTmVhcihjaGVja1BvaW50LCBjZW50ZXJQb2ludCwga20pIHtcbiAgdmFyIGt5ID0gNDAwMDAgLyAzNjA7XG4gIHZhciBreCA9IE1hdGguY29zKChNYXRoLlBJICogY2VudGVyUG9pbnQubGF0KSAvIDE4MC4wKSAqIGt5O1xuICB2YXIgZHggPSBNYXRoLmFicyhjZW50ZXJQb2ludC5sb25nIC0gY2hlY2tQb2ludC5sb25nKSAqIGt4O1xuICB2YXIgZHkgPSBNYXRoLmFicyhjZW50ZXJQb2ludC5sYXQgLSBjaGVja1BvaW50LmxhdCkgKiBreTtcbiAgcmV0dXJuIE1hdGguc3FydChkeCAqIGR4ICsgZHkgKiBkeSkgPD0ga207XG59XG5cbmV4cG9ydHMuYWxlcnQgPSBhc3luYyAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgY29uc3QgcmVzdWx0ID0gYXdhaXQgRXZlbnQuZmluZCh7IGlzRGVsZXRlOiBmYWxzZSB9KS5zZWxlY3Qoe1xuICAgIGxhdDogMSxcbiAgICBsb25nOiAxLFxuICAgIGNvdW50OiAxXG4gIH0pO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IHJlc3VsdC5sZW5ndGg7IGkrKykge1xuICAgIHZhciBuID0gYXJlUG9pbnRzTmVhcihcbiAgICAgIHJlc3VsdFtpXSxcbiAgICAgIHsgbG9uZzogcmVxLmJvZHkubG9uZywgbGF0OiByZXEuYm9keS5sYXQgfSxcbiAgICAgIDFcbiAgICApO1xuICAgIGlmIChuKSB7XG4gICAgICByZXN1bHRbaV0uY291bnQgPSByZXN1bHRbaV0uY291bnQgKyAxO1xuICAgICAgcmVzdWx0W2ldLnNhdmUoZXJyID0+IHtcbiAgICAgICAgaWYgKGVycikge1xuICAgICAgICAgIHJldHVybiBuZXh0KGVycik7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlcy5qc29uKHsgbWVzc2FnZTogXCJzdWNjZXNzXCIgfSk7XG4gICAgICB9KTtcbiAgICB9XG4gIH1cbiAgaWYgKG4gIT0gdHJ1ZSkge1xuICAgIGxldCBuZXdFdmVudCA9IG5ldyBFdmVudCh7XG4gICAgICBsb25nOiByZXEuYm9keS5sb25nLFxuICAgICAgbGF0OiByZXEuYm9keS5sYXQsXG4gICAgICBjb3VudDogMSxcbiAgICAgIGlzRGVsZXRlOiBmYWxzZVxuICAgIH0pO1xuICAgIGNvbnNvbGUubG9nKFwiSU5cIik7XG4gICAgbmV3RXZlbnQuc2F2ZShlcnIgPT4ge1xuICAgICAgaWYgKGVycikge1xuICAgICAgICByZXR1cm4gbmV4dChlcnIpO1xuICAgICAgfVxuICAgICAgcmVzLmpzb24oeyBtZXNzYWdlOiBcInN1Y2Nlc3NcIiB9KTtcbiAgICB9KTtcbiAgfVxufTtcblxuZXhwb3J0cy5nZXRhbGwgPSAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgY29uc3QgcmVzdWx0ID0gRXZlbnQuZmluZCh7IGlzRGVsZXRlOiBmYWxzZSB9KS5leGVjKChlcnIsIHJlc3VsdCkgPT4ge1xuICAgIGlmIChlcnIpIHtcbiAgICAgIHJldHVybiBuZXh0KGVycik7XG4gICAgfVxuICAgIHJlcy5qc29uKHsgcmVzdWx0OiByZXN1bHQgfSk7XG4gIH0pO1xufTtcblxuZXhwb3J0cy5yZXNwb25kID0gYXN5bmMgKHJlcywgcmVxLCBuZXh0KSA9PiB7XG4gIGNvbnN0IHJlc3VsdCA9IGF3YWl0IEV2ZW50LmZpbmQoeyBsYXQ6IHJlcS5ib2R5LmxhdCwgbG9uZzogcmVxLmJvZHkubGF0IH0pO1xuICByZXN1bHRbMF0uaXNEZWxldGUgPSBUcnVlO1xuICByZXN1bHRbMF0uc2F2ZShlcnIgPT4ge1xuICAgIGlmIChlcnIpIHtcbiAgICAgIHJldHVybiBuZXh0KGVycik7XG4gICAgfVxuICAgIHJlcy5qc29uKHsgbWVzc2FnZTogXCJzdWNjZXNzXCIgfSk7XG4gIH0pO1xufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "event.controller.js"
      ],
      "names": [
        "Event",
        "require",
        "arePointsNear",
        "checkPoint",
        "centerPoint",
        "km",
        "ky",
        "kx",
        "Math",
        "cos",
        "PI",
        "lat",
        "dx",
        "abs",
        "long",
        "dy",
        "sqrt",
        "exports",
        "alert",
        "req",
        "res",
        "next",
        "result",
        "find",
        "isDelete",
        "select",
        "count",
        "i",
        "length",
        "n",
        "body",
        "save",
        "err",
        "json",
        "message",
        "newEvent",
        "console",
        "log",
        "getall",
        "exec",
        "respond",
        "True"
      ],
      "mappings": "AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,sBAAD,CAArB;;AAEA,SAASC,aAAT,CAAuBC,UAAvB,EAAmCC,WAAnC,EAAgDC,EAAhD,EAAoD;AAClD,MAAIC,EAAE,GAAG,QAAQ,GAAjB;AACA,MAAIC,EAAE,GAAGC,IAAI,CAACC,GAAL,CAAUD,IAAI,CAACE,EAAL,GAAUN,WAAW,CAACO,GAAvB,GAA8B,KAAvC,IAAgDL,EAAzD;AACA,MAAIM,EAAE,GAAGJ,IAAI,CAACK,GAAL,CAAST,WAAW,CAACU,IAAZ,GAAmBX,UAAU,CAACW,IAAvC,IAA+CP,EAAxD;AACA,MAAIQ,EAAE,GAAGP,IAAI,CAACK,GAAL,CAAST,WAAW,CAACO,GAAZ,GAAkBR,UAAU,CAACQ,GAAtC,IAA6CL,EAAtD;AACA,SAAOE,IAAI,CAACQ,IAAL,CAAUJ,EAAE,GAAGA,EAAL,GAAUG,EAAE,GAAGA,EAAzB,KAAgCV,EAAvC;AACD;;AAEDY,OAAO,CAACC,KAAR,GAAgB,OAAOC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB,KAA0B;AACxC,QAAMC,MAAM,GAAG,MAAMtB,KAAK,CAACuB,IAAN,CAAW;AAAEC,IAAAA,QAAQ,EAAE;AAAZ,GAAX,EAAgCC,MAAhC,CAAuC;AAC1Dd,IAAAA,GAAG,EAAE,CADqD;AAE1DG,IAAAA,IAAI,EAAE,CAFoD;AAG1DY,IAAAA,KAAK,EAAE;AAHmD,GAAvC,CAArB;;AAKA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,MAAM,CAACM,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACtC,QAAIE,CAAC,GAAG3B,aAAa,CACnBoB,MAAM,CAACK,CAAD,CADa,EAEnB;AAAEb,MAAAA,IAAI,EAAEK,GAAG,CAACW,IAAJ,CAAShB,IAAjB;AAAuBH,MAAAA,GAAG,EAAEQ,GAAG,CAACW,IAAJ,CAASnB;AAArC,KAFmB,EAGnB,CAHmB,CAArB;;AAKA,QAAIkB,CAAJ,EAAO;AACLP,MAAAA,MAAM,CAACK,CAAD,CAAN,CAAUD,KAAV,GAAkBJ,MAAM,CAACK,CAAD,CAAN,CAAUD,KAAV,GAAkB,CAApC;AACAJ,MAAAA,MAAM,CAACK,CAAD,CAAN,CAAUI,IAAV,CAAeC,GAAG,IAAI;AACpB,YAAIA,GAAJ,EAAS;AACP,iBAAOX,IAAI,CAACW,GAAD,CAAX;AACD;;AACD,eAAOZ,GAAG,CAACa,IAAJ,CAAS;AAAEC,UAAAA,OAAO,EAAE;AAAX,SAAT,CAAP;AACD,OALD;AAMD;AACF;;AACD,MAAIL,CAAC,IAAI,IAAT,EAAe;AACb,QAAIM,QAAQ,GAAG,IAAInC,KAAJ,CAAU;AACvBc,MAAAA,IAAI,EAAEK,GAAG,CAACW,IAAJ,CAAShB,IADQ;AAEvBH,MAAAA,GAAG,EAAEQ,GAAG,CAACW,IAAJ,CAASnB,GAFS;AAGvBe,MAAAA,KAAK,EAAE,CAHgB;AAIvBF,MAAAA,QAAQ,EAAE;AAJa,KAAV,CAAf;AAMAY,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACAF,IAAAA,QAAQ,CAACJ,IAAT,CAAcC,GAAG,IAAI;AACnB,UAAIA,GAAJ,EAAS;AACP,eAAOX,IAAI,CAACW,GAAD,CAAX;AACD;;AACDZ,MAAAA,GAAG,CAACa,IAAJ,CAAS;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAT;AACD,KALD;AAMD;AACF,CArCD;;AAuCAjB,OAAO,CAACqB,MAAR,GAAiB,CAACnB,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AACnC,QAAMC,MAAM,GAAGtB,KAAK,CAACuB,IAAN,CAAW;AAAEC,IAAAA,QAAQ,EAAE;AAAZ,GAAX,EAAgCe,IAAhC,CAAqC,CAACP,GAAD,EAAMV,MAAN,KAAiB;AACnE,QAAIU,GAAJ,EAAS;AACP,aAAOX,IAAI,CAACW,GAAD,CAAX;AACD;;AACDZ,IAAAA,GAAG,CAACa,IAAJ,CAAS;AAAEX,MAAAA,MAAM,EAAEA;AAAV,KAAT;AACD,GALc,CAAf;AAMD,CAPD;;AASAL,OAAO,CAACuB,OAAR,GAAkB,OAAOpB,GAAP,EAAYD,GAAZ,EAAiBE,IAAjB,KAA0B;AAC1C,QAAMC,MAAM,GAAG,MAAMtB,KAAK,CAACuB,IAAN,CAAW;AAAEZ,IAAAA,GAAG,EAAEQ,GAAG,CAACW,IAAJ,CAASnB,GAAhB;AAAqBG,IAAAA,IAAI,EAAEK,GAAG,CAACW,IAAJ,CAASnB;AAApC,GAAX,CAArB;AACAW,EAAAA,MAAM,CAAC,CAAD,CAAN,CAAUE,QAAV,GAAqBiB,IAArB;AACAnB,EAAAA,MAAM,CAAC,CAAD,CAAN,CAAUS,IAAV,CAAeC,GAAG,IAAI;AACpB,QAAIA,GAAJ,EAAS;AACP,aAAOX,IAAI,CAACW,GAAD,CAAX;AACD;;AACDZ,IAAAA,GAAG,CAACa,IAAJ,CAAS;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAT;AACD,GALD;AAMD,CATD",
      "sourceRoot": "/home/xtro/firebrigade/controller",
      "sourcesContent": [
        "const Event = require(\"../model/event.model\");\n\nfunction arePointsNear(checkPoint, centerPoint, km) {\n  var ky = 40000 / 360;\n  var kx = Math.cos((Math.PI * centerPoint.lat) / 180.0) * ky;\n  var dx = Math.abs(centerPoint.long - checkPoint.long) * kx;\n  var dy = Math.abs(centerPoint.lat - checkPoint.lat) * ky;\n  return Math.sqrt(dx * dx + dy * dy) <= km;\n}\n\nexports.alert = async (req, res, next) => {\n  const result = await Event.find({ isDelete: false }).select({\n    lat: 1,\n    long: 1,\n    count: 1\n  });\n  for (var i = 0; i < result.length; i++) {\n    var n = arePointsNear(\n      result[i],\n      { long: req.body.long, lat: req.body.lat },\n      1\n    );\n    if (n) {\n      result[i].count = result[i].count + 1;\n      result[i].save(err => {\n        if (err) {\n          return next(err);\n        }\n        return res.json({ message: \"success\" });\n      });\n    }\n  }\n  if (n != true) {\n    let newEvent = new Event({\n      long: req.body.long,\n      lat: req.body.lat,\n      count: 1,\n      isDelete: false\n    });\n    console.log(\"IN\");\n    newEvent.save(err => {\n      if (err) {\n        return next(err);\n      }\n      res.json({ message: \"success\" });\n    });\n  }\n};\n\nexports.getall = (req, res, next) => {\n  const result = Event.find({ isDelete: false }).exec((err, result) => {\n    if (err) {\n      return next(err);\n    }\n    res.json({ result: result });\n  });\n};\n\nexports.respond = async (res, req, next) => {\n  const result = await Event.find({ lat: req.body.lat, long: req.body.lat });\n  result[0].isDelete = True;\n  result[0].save(err => {\n    if (err) {\n      return next(err);\n    }\n    res.json({ message: \"success\" });\n  });\n};\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1552762247278
  },
  "{\"sourceRoot\":\"/home/xtro/firebrigade/model\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/xtro/firebrigade\",\"filename\":\"/home/xtro/firebrigade/model/event.model.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/xtro/firebrigade\",\"plugins\":[],\"presets\":[]}:7.3.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/xtro/firebrigade/model",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/xtro/firebrigade",
      "filename": "/home/xtro/firebrigade/model/event.model.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/xtro/firebrigade",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/xtro/firebrigade/model/event.model.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/xtro/firebrigade/model/event.model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/xtro/firebrigade/model",
        "sourceFileName": "event.model.js"
      }
    },
    "ast": null,
    "code": "const mongoose = require(\"mongoose\");\n\nrequire(\"mongoose-double\")(mongoose);\n\nvar SchemaTypes = mongoose.Schema.Types;\nconst EventSchema = mongoose.Schema({\n  long: SchemaTypes.Double,\n  lat: SchemaTypes.Double,\n  count: Number,\n  isDelete: Boolean\n});\nconst Event = mongoose.model(\"Event\", EventSchema);\nmodule.exports = Event;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImV2ZW50Lm1vZGVsLmpzIl0sIm5hbWVzIjpbIm1vbmdvb3NlIiwicmVxdWlyZSIsIlNjaGVtYVR5cGVzIiwiU2NoZW1hIiwiVHlwZXMiLCJFdmVudFNjaGVtYSIsImxvbmciLCJEb3VibGUiLCJsYXQiLCJjb3VudCIsIk51bWJlciIsImlzRGVsZXRlIiwiQm9vbGVhbiIsIkV2ZW50IiwibW9kZWwiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxRQUFRLEdBQUdDLE9BQU8sQ0FBQyxVQUFELENBQXhCOztBQUNBQSxPQUFPLENBQUMsaUJBQUQsQ0FBUCxDQUEyQkQsUUFBM0I7O0FBRUEsSUFBSUUsV0FBVyxHQUFHRixRQUFRLENBQUNHLE1BQVQsQ0FBZ0JDLEtBQWxDO0FBRUEsTUFBTUMsV0FBVyxHQUFHTCxRQUFRLENBQUNHLE1BQVQsQ0FBZ0I7QUFDbENHLEVBQUFBLElBQUksRUFBRUosV0FBVyxDQUFDSyxNQURnQjtBQUVsQ0MsRUFBQUEsR0FBRyxFQUFFTixXQUFXLENBQUNLLE1BRmlCO0FBR2xDRSxFQUFBQSxLQUFLLEVBQUVDLE1BSDJCO0FBSWxDQyxFQUFBQSxRQUFRLEVBQUVDO0FBSndCLENBQWhCLENBQXBCO0FBTUEsTUFBTUMsS0FBSyxHQUFHYixRQUFRLENBQUNjLEtBQVQsQ0FBZSxPQUFmLEVBQXdCVCxXQUF4QixDQUFkO0FBRUFVLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQkgsS0FBakIiLCJzb3VyY2VSb290IjoiL2hvbWUveHRyby9maXJlYnJpZ2FkZS9tb2RlbCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IG1vbmdvb3NlID0gcmVxdWlyZShcIm1vbmdvb3NlXCIpO1xucmVxdWlyZShcIm1vbmdvb3NlLWRvdWJsZVwiKShtb25nb29zZSk7XG5cbnZhciBTY2hlbWFUeXBlcyA9IG1vbmdvb3NlLlNjaGVtYS5UeXBlcztcblxuY29uc3QgRXZlbnRTY2hlbWEgPSBtb25nb29zZS5TY2hlbWEoe1xuICBsb25nOiBTY2hlbWFUeXBlcy5Eb3VibGUsXG4gIGxhdDogU2NoZW1hVHlwZXMuRG91YmxlLFxuICBjb3VudDogTnVtYmVyLFxuICBpc0RlbGV0ZTogQm9vbGVhblxufSk7XG5jb25zdCBFdmVudCA9IG1vbmdvb3NlLm1vZGVsKFwiRXZlbnRcIiwgRXZlbnRTY2hlbWEpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IEV2ZW50O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "event.model.js"
      ],
      "names": [
        "mongoose",
        "require",
        "SchemaTypes",
        "Schema",
        "Types",
        "EventSchema",
        "long",
        "Double",
        "lat",
        "count",
        "Number",
        "isDelete",
        "Boolean",
        "Event",
        "model",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACAA,OAAO,CAAC,iBAAD,CAAP,CAA2BD,QAA3B;;AAEA,IAAIE,WAAW,GAAGF,QAAQ,CAACG,MAAT,CAAgBC,KAAlC;AAEA,MAAMC,WAAW,GAAGL,QAAQ,CAACG,MAAT,CAAgB;AAClCG,EAAAA,IAAI,EAAEJ,WAAW,CAACK,MADgB;AAElCC,EAAAA,GAAG,EAAEN,WAAW,CAACK,MAFiB;AAGlCE,EAAAA,KAAK,EAAEC,MAH2B;AAIlCC,EAAAA,QAAQ,EAAEC;AAJwB,CAAhB,CAApB;AAMA,MAAMC,KAAK,GAAGb,QAAQ,CAACc,KAAT,CAAe,OAAf,EAAwBT,WAAxB,CAAd;AAEAU,MAAM,CAACC,OAAP,GAAiBH,KAAjB",
      "sourceRoot": "/home/xtro/firebrigade/model",
      "sourcesContent": [
        "const mongoose = require(\"mongoose\");\nrequire(\"mongoose-double\")(mongoose);\n\nvar SchemaTypes = mongoose.Schema.Types;\n\nconst EventSchema = mongoose.Schema({\n  long: SchemaTypes.Double,\n  lat: SchemaTypes.Double,\n  count: Number,\n  isDelete: Boolean\n});\nconst Event = mongoose.model(\"Event\", EventSchema);\n\nmodule.exports = Event;\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1552743581911
  },
  "{\"sourceRoot\":\"/home/xtro/firebrigade/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/xtro/firebrigade\",\"filename\":\"/home/xtro/firebrigade/routes/chatbot.route.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/xtro/firebrigade\",\"plugins\":[],\"presets\":[]}:7.3.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/xtro/firebrigade/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/xtro/firebrigade",
      "filename": "/home/xtro/firebrigade/routes/chatbot.route.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/xtro/firebrigade",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/xtro/firebrigade/routes/chatbot.route.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/xtro/firebrigade/routes/chatbot.route.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/xtro/firebrigade/routes",
        "sourceFileName": "chatbot.route.js"
      }
    },
    "ast": null,
    "code": "const RiveScript = require(\"rivescript\");\n\nconst express = require(\"express\");\n\nconst router = express.Router();\nlet bot = new RiveScript();\nbot.loadDirectory(\"brain\").then(loading_done).catch(loading_error);\nbot.loadFile(\"brain/chatter.rive\").then(loading_done).catch(loading_error);\n\nfunction loading_done() {\n  console.log(\"Bot has finished loading!\");\n}\n\nfunction loading_error(error, filename, lineno) {\n  console.log(\"Error when loading files: \" + error);\n}\n\nrouter.post(\"/bot\", (req, res, next) => {\n  bot.sortReplies();\n  let username = \"local-user\";\n  bot.reply(username, req.body.input).then(function (reply) {\n    res.json({\n      reply: reply\n    });\n  });\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNoYXRib3Qucm91dGUuanMiXSwibmFtZXMiOlsiUml2ZVNjcmlwdCIsInJlcXVpcmUiLCJleHByZXNzIiwicm91dGVyIiwiUm91dGVyIiwiYm90IiwibG9hZERpcmVjdG9yeSIsInRoZW4iLCJsb2FkaW5nX2RvbmUiLCJjYXRjaCIsImxvYWRpbmdfZXJyb3IiLCJsb2FkRmlsZSIsImNvbnNvbGUiLCJsb2ciLCJlcnJvciIsImZpbGVuYW1lIiwibGluZW5vIiwicG9zdCIsInJlcSIsInJlcyIsIm5leHQiLCJzb3J0UmVwbGllcyIsInVzZXJuYW1lIiwicmVwbHkiLCJib2R5IiwiaW5wdXQiLCJqc29uIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsVUFBVSxHQUFHQyxPQUFPLENBQUMsWUFBRCxDQUExQjs7QUFDQSxNQUFNQyxPQUFPLEdBQUdELE9BQU8sQ0FBQyxTQUFELENBQXZCOztBQUNBLE1BQU1FLE1BQU0sR0FBR0QsT0FBTyxDQUFDRSxNQUFSLEVBQWY7QUFFQSxJQUFJQyxHQUFHLEdBQUcsSUFBSUwsVUFBSixFQUFWO0FBQ0FLLEdBQUcsQ0FDQUMsYUFESCxDQUNpQixPQURqQixFQUVHQyxJQUZILENBRVFDLFlBRlIsRUFHR0MsS0FISCxDQUdTQyxhQUhUO0FBSUFMLEdBQUcsQ0FDQU0sUUFESCxDQUNZLG9CQURaLEVBRUdKLElBRkgsQ0FFUUMsWUFGUixFQUdHQyxLQUhILENBR1NDLGFBSFQ7O0FBS0EsU0FBU0YsWUFBVCxHQUF3QjtBQUN0QkksRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksMkJBQVo7QUFDRDs7QUFFRCxTQUFTSCxhQUFULENBQXVCSSxLQUF2QixFQUE4QkMsUUFBOUIsRUFBd0NDLE1BQXhDLEVBQWdEO0FBQzlDSixFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSwrQkFBK0JDLEtBQTNDO0FBQ0Q7O0FBRURYLE1BQU0sQ0FBQ2MsSUFBUCxDQUFZLE1BQVosRUFBb0IsQ0FBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQVdDLElBQVgsS0FBb0I7QUFDdENmLEVBQUFBLEdBQUcsQ0FBQ2dCLFdBQUo7QUFDQSxNQUFJQyxRQUFRLEdBQUcsWUFBZjtBQUNBakIsRUFBQUEsR0FBRyxDQUFDa0IsS0FBSixDQUFVRCxRQUFWLEVBQW9CSixHQUFHLENBQUNNLElBQUosQ0FBU0MsS0FBN0IsRUFBb0NsQixJQUFwQyxDQUF5QyxVQUFTZ0IsS0FBVCxFQUFnQjtBQUN2REosSUFBQUEsR0FBRyxDQUFDTyxJQUFKLENBQVM7QUFBRUgsTUFBQUEsS0FBSyxFQUFFQTtBQUFULEtBQVQ7QUFDRCxHQUZEO0FBR0QsQ0FORDtBQVFBSSxNQUFNLENBQUNDLE9BQVAsR0FBaUJ6QixNQUFqQiIsInNvdXJjZVJvb3QiOiIvaG9tZS94dHJvL2ZpcmVicmlnYWRlL3JvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFJpdmVTY3JpcHQgPSByZXF1aXJlKFwicml2ZXNjcmlwdFwiKTtcbmNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKFwiZXhwcmVzc1wiKTtcbmNvbnN0IHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XG5cbmxldCBib3QgPSBuZXcgUml2ZVNjcmlwdCgpO1xuYm90XG4gIC5sb2FkRGlyZWN0b3J5KFwiYnJhaW5cIilcbiAgLnRoZW4obG9hZGluZ19kb25lKVxuICAuY2F0Y2gobG9hZGluZ19lcnJvcik7XG5ib3RcbiAgLmxvYWRGaWxlKFwiYnJhaW4vY2hhdHRlci5yaXZlXCIpXG4gIC50aGVuKGxvYWRpbmdfZG9uZSlcbiAgLmNhdGNoKGxvYWRpbmdfZXJyb3IpO1xuXG5mdW5jdGlvbiBsb2FkaW5nX2RvbmUoKSB7XG4gIGNvbnNvbGUubG9nKFwiQm90IGhhcyBmaW5pc2hlZCBsb2FkaW5nIVwiKTtcbn1cblxuZnVuY3Rpb24gbG9hZGluZ19lcnJvcihlcnJvciwgZmlsZW5hbWUsIGxpbmVubykge1xuICBjb25zb2xlLmxvZyhcIkVycm9yIHdoZW4gbG9hZGluZyBmaWxlczogXCIgKyBlcnJvcik7XG59XG5cbnJvdXRlci5wb3N0KFwiL2JvdFwiLCAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgYm90LnNvcnRSZXBsaWVzKCk7XG4gIGxldCB1c2VybmFtZSA9IFwibG9jYWwtdXNlclwiO1xuICBib3QucmVwbHkodXNlcm5hbWUsIHJlcS5ib2R5LmlucHV0KS50aGVuKGZ1bmN0aW9uKHJlcGx5KSB7XG4gICAgcmVzLmpzb24oeyByZXBseTogcmVwbHkgfSk7XG4gIH0pO1xufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gcm91dGVyO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "chatbot.route.js"
      ],
      "names": [
        "RiveScript",
        "require",
        "express",
        "router",
        "Router",
        "bot",
        "loadDirectory",
        "then",
        "loading_done",
        "catch",
        "loading_error",
        "loadFile",
        "console",
        "log",
        "error",
        "filename",
        "lineno",
        "post",
        "req",
        "res",
        "next",
        "sortReplies",
        "username",
        "reply",
        "body",
        "input",
        "json",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,UAAU,GAAGC,OAAO,CAAC,YAAD,CAA1B;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAME,MAAM,GAAGD,OAAO,CAACE,MAAR,EAAf;AAEA,IAAIC,GAAG,GAAG,IAAIL,UAAJ,EAAV;AACAK,GAAG,CACAC,aADH,CACiB,OADjB,EAEGC,IAFH,CAEQC,YAFR,EAGGC,KAHH,CAGSC,aAHT;AAIAL,GAAG,CACAM,QADH,CACY,oBADZ,EAEGJ,IAFH,CAEQC,YAFR,EAGGC,KAHH,CAGSC,aAHT;;AAKA,SAASF,YAAT,GAAwB;AACtBI,EAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACD;;AAED,SAASH,aAAT,CAAuBI,KAAvB,EAA8BC,QAA9B,EAAwCC,MAAxC,EAAgD;AAC9CJ,EAAAA,OAAO,CAACC,GAAR,CAAY,+BAA+BC,KAA3C;AACD;;AAEDX,MAAM,CAACc,IAAP,CAAY,MAAZ,EAAoB,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AACtCf,EAAAA,GAAG,CAACgB,WAAJ;AACA,MAAIC,QAAQ,GAAG,YAAf;AACAjB,EAAAA,GAAG,CAACkB,KAAJ,CAAUD,QAAV,EAAoBJ,GAAG,CAACM,IAAJ,CAASC,KAA7B,EAAoClB,IAApC,CAAyC,UAASgB,KAAT,EAAgB;AACvDJ,IAAAA,GAAG,CAACO,IAAJ,CAAS;AAAEH,MAAAA,KAAK,EAAEA;AAAT,KAAT;AACD,GAFD;AAGD,CAND;AAQAI,MAAM,CAACC,OAAP,GAAiBzB,MAAjB",
      "sourceRoot": "/home/xtro/firebrigade/routes",
      "sourcesContent": [
        "const RiveScript = require(\"rivescript\");\nconst express = require(\"express\");\nconst router = express.Router();\n\nlet bot = new RiveScript();\nbot\n  .loadDirectory(\"brain\")\n  .then(loading_done)\n  .catch(loading_error);\nbot\n  .loadFile(\"brain/chatter.rive\")\n  .then(loading_done)\n  .catch(loading_error);\n\nfunction loading_done() {\n  console.log(\"Bot has finished loading!\");\n}\n\nfunction loading_error(error, filename, lineno) {\n  console.log(\"Error when loading files: \" + error);\n}\n\nrouter.post(\"/bot\", (req, res, next) => {\n  bot.sortReplies();\n  let username = \"local-user\";\n  bot.reply(username, req.body.input).then(function(reply) {\n    res.json({ reply: reply });\n  });\n});\n\nmodule.exports = router;\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1552760690867
  }
}